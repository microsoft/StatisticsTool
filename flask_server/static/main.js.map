{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/click-outside.directive.ts","./src/app/common/enums.ts","./src/app/configuration-viewer/configuration-viewer.component.ts","./src/app/configuration-viewer/configuration-viewer.component.html","./src/app/configuration-viewer/udf-arguments/udf-arguments.component.ts","./src/app/configuration-viewer/udf-arguments/udf-arguments.component.html","./src/app/drawer-content/drawer-content.component.ts","./src/app/drawer-content/drawer-content.component.html","./src/app/drawer/drawer.component.ts","./src/app/drawer/drawer.component.html","./src/app/new-report/new-report-result/new-report-result.component.html","./src/app/new-report/new-report-result/new-report-result.component.ts","./src/app/new-report/new-report.component.ts","./src/app/new-report/new-report.component.html","./src/app/pkl-view/pkl-view.component.ts","./src/app/pkl-view/pkl-view.component.html","./src/app/save-suite-dialog/save-suite-dialog.component.ts","./src/app/save-suite-dialog/save-suite-dialog.component.html","./src/app/save-template-dialog/save-template-dialog.component.ts","./src/app/save-template-dialog/save-template-dialog.component.html","./src/app/segmentations/segmentations.component.ts","./src/app/segmentations/segmentations.component.html","./src/app/services/common.service.ts","./src/app/services/new-report.service.ts","./src/app/services/statistics-tool.service.ts","./src/app/template-segmentations/template-segmentations.component.ts","./src/app/template-segmentations/template-segmentations.component.html","./src/app/template-segments-header/template-segments-header.component.ts","./src/app/template-segments-header/template-segments-header.component.html","./src/app/utils.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'update_list',component:AppComponent },\r\n  {path: 'index.html',component:AppComponent  } \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ElementRef, HostListener, Input, OnInit } from '@angular/core';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { StatisticsToolService } from './services/statistics-tool.service';\r\nimport { NewReportService } from './services/new-report.service';\r\nimport { CommonService } from './services/common.service';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { \r\n  }\r\n\r\n  transform(url:string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: MouseEvent) {\r\n    this.commonSvc.onMouseClicked.next(event);\r\n  }\r\n\r\n  showFiller = false;\r\n  isNewReport = false;\r\n\r\n  @Input() config_key = '';\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    if (event.key === \"Escape\") {\r\n        this.statToolSvc.showDrawer = false;\r\n    }\r\n  }\r\n\r\n  @HostListener(\"window:message\",[\"$event\"])\r\n  SampleFunction($event:MessageEvent) {\r\n    \r\n    let o = $event.data as {'action':string, 'value':string};\r\n    \r\n    if (o.action == 'viewer-mousedown'){\r\n      console.log('viewer-mousedown')\r\n      this.commonSvc.onMouseClicked.next(true);\r\n      return;\r\n    }\r\n    \r\n    this.statToolSvc.openDrawer.next($event.data);\r\n\r\n    if (o.action == 'update_list'){\r\n      let updateListUrl = o.value;\r\n      console.log('update_list',updateListUrl);\r\n      this.statToolSvc.drawerUpdateListUrl = updateListUrl;\r\n    }\r\n    if (o.action == 'show_image'){\r\n      \r\n      //check if path exists\r\n      if (this.statToolSvc.activeLocalDataStore && this.statToolSvc.localDataStorePath.length > 0){\r\n          let url = o.value + \"&local_path=\" + this.statToolSvc.localDataStorePath;\r\n          this.statToolSvc.drawerShowImageUrl = url;\r\n      } else {\r\n        this.statToolSvc.drawerShowImageUrl = o.value;\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private router : Router,\r\n              public statToolSvc:StatisticsToolService,\r\n              private newReportService:NewReportService,\r\n              public eltRef: ElementRef,\r\n              private commonSvc:CommonService) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.newReportService.initialize();\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationStart){\r\n        let reports = new URLSearchParams(window.location.search).get('reports');\r\n        if (reports == null){\r\n          this.isNewReport = true;\r\n        } else {\r\n          this.isNewReport = false;\r\n          let reportsPairs = new URLSearchParams(window.location.search).get('reports')?.toString();\r\n          this.statToolSvc.init(reportsPairs);\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div *ngIf = \"!isNewReport\">\r\n    <drawer></drawer>\r\n    <template-segmentations></template-segmentations>\r\n</div>\r\n<div *ngIf = \"isNewReport\">\r\n    <new-report></new-report>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent, SafePipe } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SegmentationsComponent } from './segmentations/segmentations.component';\r\nimport { PklViewComponent } from './pkl-view/pkl-view.component';\r\nimport { StatisticsToolService } from './services/statistics-tool.service';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { TemplateSegmentationsComponent } from './template-segmentations/template-segmentations.component';\r\nimport { TemplateSegmentsHeaderComponent } from './template-segments-header/template-segments-header.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { DrawerContentComponent } from './drawer-content/drawer-content.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport '@angular/localize/init';\r\nimport { SaveTemplateDialogComponent } from './save-template-dialog/save-template-dialog.component';\r\nimport { NewReportComponent } from './new-report/new-report.component';\r\nimport { SaveSuiteDialogComponent } from './save-suite-dialog/save-suite-dialog.component';\r\nimport { ConfigurationViewerComponent } from './configuration-viewer/configuration-viewer.component';\r\nimport { NewReportResultComponent } from './new-report/new-report-result/new-report-result.component';\r\nimport { ClickOutsideDirective } from './click-outside.directive'; // Adjust the path to your directive\r\nimport { CommonService } from './services/common.service';\r\nimport { UdfArgumentsComponent } from './configuration-viewer/udf-arguments/udf-arguments.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // Import the BrowserAnimationsModule\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SafePipe,\r\n    SegmentationsComponent,\r\n    PklViewComponent,\r\n    TemplateSegmentationsComponent,\r\n    TemplateSegmentsHeaderComponent,\r\n    DrawerComponent,\r\n    DrawerContentComponent,\r\n    SaveTemplateDialogComponent,\r\n    NewReportComponent,\r\n    SaveSuiteDialogComponent,\r\n    ConfigurationViewerComponent,\r\n    NewReportResultComponent,\r\n    ClickOutsideDirective,\r\n    UdfArgumentsComponent\r\n  ],\r\n  imports: [\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    MatSelectModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatProgressSpinnerModule,\r\n    MatSidenavModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    NgbModule,\r\n    NgbTypeaheadModule,\r\n    NgbAlertModule,\r\n    DragDropModule, \r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [StatisticsToolService,CommonService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, ElementRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\r\nimport { CommonService } from './services/common.service';\r\nimport { States, StatisticsToolService } from './services/statistics-tool.service';\r\n\r\n@Directive({\r\n  selector: '[appClickOutside]'\r\n})\r\nexport class ClickOutsideDirective implements OnInit {\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2,private statSvc:StatisticsToolService,private commonSvc:CommonService) {}\r\n  \r\n  @Input() viewId:     number = 0;\r\n  @Input() viewguid = '';\r\n  @Input() segmentName:string = '';\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.commonSvc.onMouseClicked.subscribe(event => {\r\n        let name = this.elementRef.nativeElement.parentNode.parentNode.attributes['name'].value;\r\n        const dropdownPanel = this.elementRef.nativeElement.querySelector('.dropdown-list');  \r\n        //const caretIcon = this.elementRef.nativeElement.querySelector('.dropdown-multiselect__caret');\r\n        \r\n        if (this.statSvc.getDropdownState(this.viewguid,name) == States.Opened){\r\n          this.statSvc.setDropdownState(this.viewguid,name,States.Open);\r\n          \r\n          return;\r\n        }\r\n        if (this.statSvc.getDropdownState(this.viewguid,name) == States.Open){\r\n          dropdownPanel.hidden = true;\r\n          /*if (caretIcon instanceof HTMLElement) {\r\n            caretIcon.classList.add('rotate-180');\r\n          }*/\r\n        } else {\r\n          /*caretIcon.classList.remove('rotate-180');*/\r\n        }\r\n    })\r\n  }\r\n}\r\n","\r\nexport enum UDFTitleEnum {\r\n    PREDICTION_READING_FUNCTION = 'Prediction Reading Function',\r\n    GT_READING_FUNCTION = 'GT Reading Function',\r\n    GT_READING_FUNCTION_SAME_AS_PREDICTION = 'Same as prediction',\r\n    GT_READING_FUNCTION_SEPARATE_FUNCTIONS = 'Separate functions',\r\n    ASSOCIATION_FUNCTION = 'Association Function',\r\n    TRANSFORM_FUNCTION = 'Transform Function',\r\n    PARTITIONING_FUNCTION = 'Partitioning Function',\r\n    CONFUSION_FUNCTION = 'Confusion Function',\r\n    STATISTICS_FUNCTION = 'Statistics Function',\r\n    EVALUATE_LOGS_FOLDER = 'Evaluate Logs Folders',\r\n    EVALUATE_LOGS_FILES = 'Evaluate Logs Files',\r\n}\r\n\r\nexport enum UDFTypeEnum {\r\n    READING_FUNCTIONS       = 'reading_functions',\r\n    GT_READING_FUNCTIONS    = 'gt_reading_functions',\r\n    ASSOCIATION_FUNCTIONS   = 'association_functions',\r\n    TRANSFORM_FUNCTIONS     = 'transform_functions',\r\n    PARTITIONING_FUNCTIONS  = 'partitioning_functions',\r\n    CONFUSION_FUNCTIONS     = 'confusion_functions',\r\n    STATISTICS_FUNCTIONS    = 'statistics_functions',\r\n    LOGS_NAME_TO_EVALUATE   = 'logs_file_names_to_evaluate',\r\n    CONFIG_NAME             = 'configName',\r\n    EVALUATE_FOLDERS        = 'evaluate_folders', \r\n}\r\n\r\nexport enum UDFConstants {\r\n    DEFAULT_LOG_FILTER        = '*.json',\r\n    DEFAULT_FOLDER_FILTER     = '*',\r\n}\r\n\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NewReportService, UDF } from '../services/new-report.service';\r\nimport { ignoreElements } from 'rxjs';\r\nimport { UDFTypeEnum, UDFTitleEnum, UDFConstants } from '../common/enums';\r\n\r\n@Component({\r\n  selector: 'configuration-viewer',\r\n  templateUrl: './configuration-viewer.component.html',\r\n  styleUrls: ['./configuration-viewer.component.css']\r\n})\r\nexport class ConfigurationViewerComponent implements OnInit {\r\n\r\n  @ViewChild('readingFunctionImg',      { static: false }) readingFunctionImgElement: ElementRef|null = null;\r\n  @ViewChild('gtReadingFunctionImg',    { static: false }) gtReadingFunctionImgElement: ElementRef|null = null;\r\n  @ViewChild('associationFunctionImg',  { static: false }) associationFunctionImgElement: ElementRef|null = null;\r\n  @ViewChild('transformFunctionImg',    { static: false }) transformFunctionImgElement: ElementRef|null = null;\r\n  @ViewChild('partitioningFunctionImg', { static: false }) partitioningFunctionImgElement: ElementRef|null = null;\r\n  @ViewChild('statisticsFunctionImg', { static: false }) statisticsFunctionImgElement: ElementRef|null = null;\r\n  @ViewChild('confusionFunctionImg', { static: false }) confusionFunctionImgElement: ElementRef|null = null;\r\n\r\n  readonly title = 'New Configuration';\r\n\r\n  showPredictionAguments = false;\r\n  functionOpenedArguments = '';\r\n\r\n  udfTitles = UDFTitleEnum;\r\n  udfTypes  = UDFTypeEnum;\r\n\r\n  readonly ARGUMENT_GRAY_ICON   = 'assets/argument-gray-icon.svg';\r\n  readonly ARGUMENT_GREEN_ICON = 'assets/argument-green-icon.svg';\r\n  readonly ARGUMENT_RED_ICON    = 'assets/argument-red-icon.svg';\r\n\r\n  constructor(public newReportService:NewReportService) {\r\n    \r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  togglePanel() {\r\n    this.newReportService.isPanelOpen = !this.newReportService.isPanelOpen;\r\n  }\r\n\r\n  close(){\r\n    this.newReportService.showConfigViewer = false;\r\n  }\r\n\r\n  disableSaveButton(){\r\n    if (this.newReportService.configName == '') return true;\r\n\r\n    if (this.newReportService.selectedPredictionReadingFunction == '') return true;\r\n    //else if (this.newReportService.selectedPredictionReadingFunction != '' && !this.paramsHaveValue(UDFTypeEnum.READING_FUNCTIONS)) return true;\r\n\r\n    if (!this.newReportService.gtReadingSameAsPrediction && this.newReportService.selectedGTReadingFunction == '') return true;\r\n    //else if (!this.newReportService.gtReadingSameAsPrediction && this.newReportService.selectedGTReadingFunction != '' && !this.paramsHaveValue(UDFTypeEnum.GT_READING_FUNCTIONS)) return true;\r\n    \r\n    if (this.newReportService.transformEnabled && this.newReportService.selectedTransformFunction == '') return true;\r\n    //else if (this.newReportService.transformEnabled && this.newReportService.selectedTransformFunction != '' && !this.paramsHaveValue(UDFTypeEnum.TRANSFORM_FUNCTIONS)) return true;\r\n\r\n    if (this.newReportService.selectedStatisticsFunction == '') return true;\r\n    //else if (this.newReportService.selectedStatisticsFunction != '' && !this.paramsHaveValue(UDFTypeEnum.STATISTICS_FUNCTIONS)) return true;\r\n\r\n    if (this.newReportService.partitioningEnabled && this.newReportService.selectedPartitioningFunction == '') return true;\r\n    //else if (this.newReportService.partitioningEnabled && this.newReportService.selectedPartitioningFunction != ''  && !this.paramsHaveValue(UDFTypeEnum.PARTITIONING_FUNCTIONS)) return true;\r\n\r\n    if (this.newReportService.selectedConfusionFunction == '') return true;\r\n    //else if (this.newReportService.selectedConfusionFunction != '' && !this.paramsHaveValue(UDFTypeEnum.CONFUSION_FUNCTIONS)) return true;\r\n\r\n    return false\r\n      \r\n  }\r\n\r\n  getTitle(){\r\n    if (this.newReportService.configName != '')\r\n      return this.newReportService.configName;\r\n    return 'New Configuration';\r\n  }\r\n\r\n  onPredictionReadingFunctionChange(event: Event) {\r\n\r\n    this.newReportService.showParams = false;\r\n\r\n    if (!this.functionHasArguments(UDFTypeEnum.READING_FUNCTIONS,this.newReportService.selectedPredictionReadingFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.READING_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.readingFunctionImgElement,\r\n                            UDFTypeEnum.READING_FUNCTIONS,\r\n                            UDFTitleEnum.PREDICTION_READING_FUNCTION,\r\n                            this.newReportService.selectedPredictionReadingFunction,\r\n                            true);\r\n  }\r\n\r\n  onGTReadingFunctionChange(event: Event) {\r\n\r\n    this.newReportService.showParams = false;\r\n\r\n    if (!this.functionHasArguments(UDFTypeEnum.GT_READING_FUNCTIONS,this.newReportService.selectedGTReadingFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.GT_READING_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.gtReadingFunctionImgElement,\r\n                            UDFTypeEnum.GT_READING_FUNCTIONS,\r\n                            this.udfTitles.GT_READING_FUNCTION,\r\n                            this.newReportService.selectedGTReadingFunction,\r\n                            true);\r\n\r\n  }\r\n\r\n  onAssociationFunctionChange(event: Event) {\r\n\r\n    this.newReportService.showParams = false;\r\n\r\n    if (!this.functionHasArguments(UDFTypeEnum.ASSOCIATION_FUNCTIONS,this.newReportService.selectedAssociationFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.ASSOCIATION_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.gtReadingFunctionImgElement,\r\n      UDFTypeEnum.ASSOCIATION_FUNCTIONS,\r\n      this.udfTitles.ASSOCIATION_FUNCTION,\r\n      this.newReportService.selectedAssociationFunction,\r\n      true);\r\n  }\r\n\r\n  onStatisticsFunctionChange(event: Event) {\r\n    this.newReportService.showParams = false;\r\n\r\n    if (!this.functionHasArguments(this.udfTypes.STATISTICS_FUNCTIONS,this.newReportService.selectedStatisticsFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.STATISTICS_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.statisticsFunctionImgElement,\r\n      UDFTypeEnum.STATISTICS_FUNCTIONS,\r\n      UDFTitleEnum.STATISTICS_FUNCTION,\r\n      this.newReportService.selectedStatisticsFunction,\r\n      true);\r\n  }\r\n\r\n  \r\n  onConfusionFunctionChange(event: Event) {\r\n    this.newReportService.showParams = false;\r\n\r\n    if (!this.functionHasArguments(this.udfTypes.CONFUSION_FUNCTIONS,this.newReportService.selectedConfusionFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.CONFUSION_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.confusionFunctionImgElement,\r\n      UDFTypeEnum.CONFUSION_FUNCTIONS,\r\n      UDFTitleEnum.CONFUSION_FUNCTION,\r\n      this.newReportService.selectedConfusionFunction,\r\n      true);\r\n  }\r\n\r\n  onTransformFunctionChange(event: Event) {\r\n\r\n    this.newReportService.showParams = false;\r\n\r\n    if (!this.functionHasArguments(this.udfTypes.TRANSFORM_FUNCTIONS,this.newReportService.selectedTransformFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.TRANSFORM_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.transformFunctionImgElement,\r\n      UDFTypeEnum.TRANSFORM_FUNCTIONS,\r\n      UDFTitleEnum.TRANSFORM_FUNCTION,\r\n      this.newReportService.selectedTransformFunction,\r\n      true);\r\n  }\r\n\r\n  onPartitioningFunctionChange(event: Event) {\r\n\r\n    this.newReportService.showParams = false;\r\n    \r\n    if (!this.functionHasArguments(UDFTypeEnum.PARTITIONING_FUNCTIONS,this.newReportService.selectedPartitioningFunction))\r\n      return;\r\n\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    this.newReportService.getUDFUserArguments(UDFTypeEnum.PARTITIONING_FUNCTIONS,selectedValue);\r\n    this.showArgumentsPanel(this.partitioningFunctionImgElement,\r\n      UDFTypeEnum.PARTITIONING_FUNCTIONS,\r\n      UDFTitleEnum.PARTITIONING_FUNCTION,\r\n      this.newReportService.selectedPartitioningFunction,\r\n      true);\r\n  }\r\n  \r\n  getArgumentSVGType(funcType:UDFTypeEnum, selectedFunction: string, isEnabled = true){\r\n      if(selectedFunction == '')\r\n      return this.ARGUMENT_GRAY_ICON;\r\n    else {\r\n      if (!this.functionHasArguments(funcType,selectedFunction))\r\n        return this.ARGUMENT_GRAY_ICON;\r\n      if (this.paramsHaveValue(funcType)){\r\n        return this.ARGUMENT_GREEN_ICON;\r\n      } else {\r\n        return this.ARGUMENT_RED_ICON;\r\n      }\r\n    }\r\n  }\r\n\r\n  getArgumentSvg(funcType:UDFTypeEnum){\r\n    if (funcType == UDFTypeEnum.READING_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedPredictionReadingFunction);\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.GT_READING_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedGTReadingFunction, !this.newReportService.gtReadingSameAsPrediction);\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.ASSOCIATION_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedAssociationFunction, this.newReportService.associationEnabled);\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.TRANSFORM_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedTransformFunction, this.newReportService.transformEnabled);\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.PARTITIONING_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedPartitioningFunction, this.newReportService.partitioningEnabled);\r\n      \r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.CONFUSION_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedConfusionFunction);\r\n      \r\n    }\r\n    if (funcType == UDFTypeEnum.STATISTICS_FUNCTIONS){\r\n      return this.getArgumentSVGType(funcType, this.newReportService.selectedStatisticsFunction);\r\n      \r\n    }\r\n\r\n    return this.ARGUMENT_RED_ICON;\r\n  }\r\n\r\n  showArgumentsPanel(elm:ElementRef|null,\r\n                     funcType:UDFTypeEnum,\r\n                     title:string,\r\n                     funcName:string,\r\n                     forceShow = false){\r\n    if (forceShow){\r\n      this.newReportService.showParams = true;\r\n    } else {                     \r\n      this.newReportService.showParams = !this.newReportService.showParams;\r\n      if (!this.newReportService.showParams)\r\n        return;\r\n    }\r\n\r\n    if (elm == null)\r\n      return;                     \r\n\r\n    const img: HTMLElement = elm.nativeElement;\r\n    const imgRect = img.getBoundingClientRect();\r\n    this.newReportService.argPanelTop  = `${imgRect.top-40}px`;\r\n    this.newReportService.argPanelLeft = `${imgRect.right + window.scrollX + 10}px`;\r\n    this.newReportService.showArgumentsPanel(funcType,title,funcName);  \r\n    this.functionOpenedArguments = funcType;\r\n  }\r\n\r\n  enableArgumentsButton(funcType:UDFTypeEnum){\r\n    if (funcType == UDFTypeEnum.READING_FUNCTIONS){\r\n      if (this.newReportService.selectedPredictionReadingFunction != '' && \r\n          this.functionHasArguments(funcType,this.newReportService.selectedPredictionReadingFunction))\r\n        return true;\r\n      return false;\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.GT_READING_FUNCTIONS){\r\n      if (this.newReportService.selectedGTReadingFunction != '' && !this.newReportService.gtReadingSameAsPrediction && \r\n          this.functionHasArguments(funcType,this.newReportService.selectedGTReadingFunction))\r\n        return true;\r\n      return false;\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.ASSOCIATION_FUNCTIONS){\r\n      if (this.newReportService.selectedAssociationFunction != '' && this.newReportService.associationEnabled \r\n          && this.functionHasArguments(funcType,this.newReportService.selectedAssociationFunction))\r\n        return true;\r\n      return false;\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.TRANSFORM_FUNCTIONS){\r\n      if (this.newReportService.selectedTransformFunction != '' && this.newReportService.transformEnabled \r\n          && this.functionHasArguments(funcType,this.newReportService.selectedTransformFunction))\r\n        return true;\r\n      return false;\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.PARTITIONING_FUNCTIONS  ){\r\n      if (this.newReportService.selectedPartitioningFunction != '' && this.newReportService.partitioningEnabled \r\n          && this.functionHasArguments(funcType,this.newReportService.selectedPartitioningFunction))\r\n        return true;\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  paramsHaveValue(funcType:UDFTypeEnum){\r\n    \r\n    if (funcType == UDFTypeEnum.READING_FUNCTIONS){\r\n      let x = this.newReportService.udf.get(funcType)?.find(x => x.funcName == this.newReportService.selectedPredictionReadingFunction)!;\r\n      if (x == undefined || x.params == undefined)\r\n        return false;\r\n      let b = true;\r\n      x.params.forEach(p => {\r\n        if (p.value == '')\r\n          b = false;\r\n      })\r\n      return b;\r\n    } \r\n\r\n    if (funcType == UDFTypeEnum.GT_READING_FUNCTIONS){\r\n      let x = this.newReportService.udf.get(funcType)?.find(x => x.funcName == this.newReportService.selectedGTReadingFunction)!;\r\n      let b = true;\r\n      x.params.forEach(p => {\r\n        if (p.value == '')\r\n          b = false;\r\n      })\r\n      return b;\r\n    } \r\n\r\n    if (funcType == UDFTypeEnum.ASSOCIATION_FUNCTIONS){\r\n      let x = this.newReportService.udf.get(funcType)?.find(x => x.funcName == this.newReportService.selectedAssociationFunction)!;\r\n      let b = true;\r\n      x.params.forEach(p => {\r\n        if (p.value == '')\r\n          b = false;\r\n      })\r\n      return b;\r\n    } \r\n\r\n    if (funcType == UDFTypeEnum.TRANSFORM_FUNCTIONS){\r\n      let x = this.newReportService.udf.get(funcType)?.find(x => x.funcName == this.newReportService.selectedTransformFunction)!;\r\n      let b = true;\r\n      x.params.forEach(p => {\r\n        if (p.value == '')\r\n          b = false;\r\n      })\r\n      return b;\r\n    } \r\n\r\n    return true;\r\n  }\r\n\r\n  checkboxChanged(funcType:UDFTypeEnum){\r\n    if (funcType == UDFTypeEnum.GT_READING_FUNCTIONS){\r\n      if (this.newReportService.gtReadingSameAsPrediction && this.functionOpenedArguments == funcType){\r\n        this.newReportService.showParams = false;\r\n      }\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.ASSOCIATION_FUNCTIONS){\r\n      if (this.newReportService.associationEnabled && this.functionOpenedArguments == funcType){\r\n        this.newReportService.showParams = false;\r\n      }\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.TRANSFORM_FUNCTIONS){\r\n      if (this.newReportService.transformEnabled && this.functionOpenedArguments == funcType){\r\n        this.newReportService.showParams = false;\r\n      }\r\n    }\r\n\r\n    if (funcType == UDFTypeEnum.PARTITIONING_FUNCTIONS){\r\n      if (this.newReportService.partitioningEnabled && this.functionOpenedArguments == funcType){\r\n          this.newReportService.showParams = false;\r\n      }\r\n    }\r\n  }\r\n  logsFolderRadioChanged(processLogsFolder:boolean){\r\n    if (processLogsFolder){\r\n      this.newReportService.logsFilter = UDFConstants.DEFAULT_LOG_FILTER\r\n    } else {\r\n      this.newReportService.logsFilter = UDFConstants.DEFAULT_FOLDER_FILTER;\r\n    }\r\n  }\r\n  gtReadingRadioChanged(sameAsPredicted:boolean){\r\n\r\n    if (sameAsPredicted){ \r\n      this.newReportService.gtReadingSameAsPrediction = true;\r\n      this.newReportService.showParams = false;\r\n      this.newReportService.selectedGTReadingFunction = '';\r\n    } else {\r\n      this.newReportService.gtReadingSameAsPrediction = false;\r\n      this.newReportService.showParams = false;\r\n    }\r\n     \r\n  }\r\n\r\n  functionHasArguments(funcType:string,funcName:string){\r\n    let funcs = this.newReportService.udf.get(funcType);\r\n    if (funcs != undefined){\r\n      let f = funcs.find(x => x.funcName == funcName);\r\n      if (f != undefined){\r\n        return f.params.length > 0;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n","<div class=\"configuration-container\" *ngIf=\"newReportService.showConfigViewer\">\r\n    <div class=\"configuration-header\">\r\n        <div class=\"closeButton\" (click)=\"close()\">X</div>\r\n        <div class=\"titleText\">{{getTitle()}}</div>\r\n    </div>\r\n    <div class=\"configuration-content\">\r\n      <!-- Configuration Name -->\r\n      <div class=\"row\" style=\"width:100%;margin-bottom: 7px;\">\r\n        <div class=\"col\">\r\n          <div class=\"form-group\">\r\n            <label for=\"config_name\" style=\"font-weight: bold\">Configuration Name:</label>\r\n            <input type=\"text\" class=\"form-control form-control-sm\" id=\"config_name\" \r\n                  placeholder=\"\" name=\"config_name\" style=\"min-height: 0px !important;width:100%;padding-right: 10px;\" \r\n                  minlength=\"3\" required #nameInput=\"ngModel\"\r\n                  [(ngModel)]=\"newReportService.configName\" name=\"config_name\"\r\n                  name=\"config_name\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': nameInput.invalid && nameInput.touched,\r\n                    'is-valid': nameInput.valid && nameInput.touched\r\n                  }\"\r\n                  >\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"report-container\">\r\n\r\n        <div class=\"report-caption\">Report Creation</div>\r\n        <!-- Log Names to Evaluate -->\r\n        <div class=\"row\" style=\"width:100%\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <div style=\"display: flex; align-items: center;\"></div>\r\n              <label for=\"log_name\" style=\"font-weight: bold\">Predictions files/folders filter:</label>\r\n              <label style=\"margin-left: 20px;\">\r\n                <input type=\"radio\" \r\n                        name=\"evaluate_logs_folder\" \r\n                        [(ngModel)]=\"newReportService.evaluate_folders\" \r\n                        [value]=\"false\"\r\n                        (ngModelChange)=\"logsFolderRadioChanged(true)\">\r\n                {{ udfTitles.EVALUATE_LOGS_FILES }}\r\n              </label>\r\n              <label style=\"margin-left: 20px;\">\r\n                <input type=\"radio\" \r\n                        name=\"evaluate_logs_folder\" \r\n                        [(ngModel)]=\"newReportService.evaluate_folders\" \r\n                        [value]=\"true\"\r\n                        (ngModelChange)=\"logsFolderRadioChanged(false)\">\r\n                {{ udfTitles.EVALUATE_LOGS_FOLDER }}\r\n              </label>\r\n              \r\n              <div style=\"display: flex; align-items: center;\">\r\n                <input type=\"text\" class=\"form-control form-control-sm\" id=\"log_name\" \r\n                      [(ngModel)]=\"newReportService.logsFilter\"\r\n                      name=\"logs_filter\"\r\n                      name=\"logs_filter\" style=\"min-height: 0px !important;\" \r\n                      >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Prediction Reading Function -->\r\n        <div class=\"row\" style=\"width: 104.5%;padding-right: 0px !important;\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\" style=\"width:100% !important\">\r\n              <label for=\"prediction_reading_function\" style=\"font-weight: bold\">{{ udfTitles.PREDICTION_READING_FUNCTION}}:</label>\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\" \r\n                        id=\"prediction_reading_function\" \r\n                        name=\"prediction_reading_function\"\r\n                        style=\"padding-right: 10px; width: 90%\" \r\n                        (change)=\"onPredictionReadingFunctionChange($event)\"\r\n                        [(ngModel)]=\"newReportService.selectedPredictionReadingFunction\" required #predictionReadingFunctionSelect=\"ngModel\" \r\n                        [ngClass]=\"{\r\n                          'is-invalid': predictionReadingFunctionSelect.invalid && predictionReadingFunctionSelect.touched,\r\n                          'is-valid': predictionReadingFunctionSelect.valid && predictionReadingFunctionSelect.touched\r\n                        }\">\r\n                  <option *ngFor=\"let func of newReportService.prediction_reading_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #readingFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.READING_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(readingFunctionImgElement,udfTypes.READING_FUNCTIONS,udfTitles.PREDICTION_READING_FUNCTION,newReportService.selectedPredictionReadingFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.READING_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- GT Reading Function-->\r\n        <div class=\"row\" style=\"width: 100%\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\" style=\"width:101% !important\">\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <label>  GT Reading function:  </label>\r\n                <label style=\"margin-left: 20px;\">\r\n                  <input type=\"radio\" \r\n                          name=\"gt_reading_function\" \r\n                          [(ngModel)]=\"newReportService.gtReadingSameAsPrediction\" \r\n                          [value]=\"true\"\r\n                          (ngModelChange)=\"gtReadingRadioChanged(true)\">\r\n                  {{ udfTitles.GT_READING_FUNCTION_SAME_AS_PREDICTION }}\r\n                </label>\r\n                <label style=\"margin-left: 20px;\">\r\n                  <input type=\"radio\" \r\n                          name=\"gt_reading_function\" \r\n                          [(ngModel)]=\"newReportService.gtReadingSameAsPrediction\" \r\n                          [value]=\"false\"\r\n                          (ngModelChange)=\"gtReadingRadioChanged(false)\">\r\n                  {{ udfTitles.GT_READING_FUNCTION_SEPARATE_FUNCTIONS }}\r\n                </label>\r\n              </div>\r\n\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\"\r\n                        name=\"gt_reading_function\"\r\n                        id=\"gt_reading_function\"\r\n                        style=\"padding-right: 10px; width: 100%;\"\r\n                        (change)=\"onGTReadingFunctionChange($event)\"\r\n                        [(ngModel)]=\"newReportService.selectedGTReadingFunction\" required #gtReadingFunctionSelect=\"ngModel\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': gtReadingFunctionSelect.invalid && gtReadingFunctionSelect.touched,\r\n                          'is-valid': gtReadingFunctionSelect.valid && gtReadingFunctionSelect.touched,\r\n                          'enable-user-defined-function':!newReportService.gtReadingSameAsPrediction,\r\n                          'disable-user-defined-function':newReportService.gtReadingSameAsPrediction\r\n                        }\" [disabled]=\"newReportService.gtReadingSameAsPrediction\">\r\n                  <option *ngFor=\"let func of newReportService.gt_reading_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #gtReadingFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.GT_READING_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(gtReadingFunctionImgElement,udfTypes.GT_READING_FUNCTIONS,udfTitles.GT_READING_FUNCTION,newReportService.selectedGTReadingFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.GT_READING_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Association Function: -->\r\n        <div class=\"row\" style=\"width: 100%\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\" style=\"width:101% !important\">\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <input type=\"checkbox\" \r\n                        style=\"margin-right: 3px;\" \r\n                        name=\"association_functions\"\r\n                        [(ngModel)]=\"newReportService.associationEnabled\"\r\n                        (ngModelChange)=\"checkboxChanged(udfTypes.ASSOCIATION_FUNCTIONS)\">\r\n                <label for=\"association_functions\" style=\"font-weight: bold\">{{ udfTitles.ASSOCIATION_FUNCTION }}:</label>\r\n              </div>\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\"\r\n                        id=\"association_functions\"\r\n                        style=\"padding-right: 10px; width: 100%;\"\r\n                        (change)=\"onAssociationFunctionChange($event)\"\r\n                        [(ngModel)]=\"newReportService.selectedAssociationFunction\" required #associationFunctionSelect=\"ngModel\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': associationFunctionSelect.invalid && associationFunctionSelect.touched,\r\n                          'is-valid': associationFunctionSelect.valid && associationFunctionSelect.touched,\r\n                          'enable-user-defined-function': newReportService.associationEnabled,\r\n                          'disable-user-defined-function': !newReportService.associationEnabled\r\n                        }\" [disabled]=\"!newReportService.associationEnabled\">\r\n                  <option *ngFor=\"let func of newReportService.association_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #associationFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.ASSOCIATION_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(associationFunctionImgElement,udfTypes.ASSOCIATION_FUNCTIONS,udfTitles.ASSOCIATION_FUNCTION,newReportService.selectedAssociationFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.ASSOCIATION_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Transform Function: -->\r\n        <div class=\"row\" style=\"width: 100%\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\" style=\"width:101% !important\">\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <input type=\"checkbox\" \r\n                        style=\"margin-right: 3px;\" \r\n                        [(ngModel)]=\"newReportService.transformEnabled\"\r\n                        (ngModelChange)=\"checkboxChanged(udfTypes.TRANSFORM_FUNCTIONS)\">\r\n                <label for=\"transform_functions\" style=\"font-weight: bold\">{{ udfTitles.TRANSFORM_FUNCTION }}:</label>\r\n              </div>\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\"\r\n                        id=\"transform_functions\"\r\n                        style=\"padding-right: 10px; width: 100%;\"\r\n                        [(ngModel)]=\"newReportService.selectedTransformFunction\" required #transformFunctionSelect=\"ngModel\"\r\n                        (change)=\"onTransformFunctionChange($event)\"\r\n                        name=\"transform_functions\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': transformFunctionSelect.invalid && transformFunctionSelect.touched,\r\n                          'is-valid': transformFunctionSelect.valid && transformFunctionSelect.touched,\r\n                          'enable-user-defined-function': newReportService.transformEnabled,\r\n                          'disable-user-defined-function': !newReportService.transformEnabled\r\n                        }\" [disabled]=\"!newReportService.transformEnabled\">\r\n                  <option *ngFor=\"let func of newReportService.transform_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #transformFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.TRANSFORM_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(transformFunctionImgElement,udfTypes.TRANSFORM_FUNCTIONS,udfTitles.TRANSFORM_FUNCTION,newReportService.selectedAssociationFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.TRANSFORM_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"report-container\">\r\n        <div class=\"report-caption\">Report View</div>\r\n        <!-- Partitioning Function: -->\r\n        <div class=\"row\" style=\"width: 100%\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\" style=\"width:101% !important\">\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <input  type=\"checkbox\" \r\n                        style=\"margin-right: 3px;\" \r\n                        [(ngModel)]=\"newReportService.partitioningEnabled\"\r\n                        (ngModelChange)=\"checkboxChanged(udfTypes.PARTITIONING_FUNCTIONS)\">\r\n                  <label for=\"partitioning_functions\" style=\"font-weight: bold\">{{ udfTitles.PARTITIONING_FUNCTION }}:</label>\r\n              </div>\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\"\r\n                        id=\"partitioning_functions\"\r\n                        name=\"partitioning_functions\"\r\n                        style=\"padding-right: 10px; width: 100%;\"\r\n                        [(ngModel)]=\"newReportService.selectedPartitioningFunction\" required #partitFunctionSelect=\"ngModel\"\r\n                        (change)=\"onPartitioningFunctionChange($event)\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': partitFunctionSelect.invalid && partitFunctionSelect.touched,\r\n                          'is-valid': partitFunctionSelect.valid && partitFunctionSelect.touched,\r\n                          'enable-user-defined-function': newReportService.partitioningEnabled,\r\n                          'disable-user-defined-function': !newReportService.partitioningEnabled\r\n                        }\" [disabled]=\"!newReportService.partitioningEnabled\">\r\n                  <option *ngFor=\"let func of newReportService.partitioning_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #partitioningFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.PARTITIONING_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(partitioningFunctionImgElement,udfTypes.PARTITIONING_FUNCTIONS,udfTitles.PARTITIONING_FUNCTION,newReportService.selectedPartitioningFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.PARTITIONING_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Statistics Function -->\r\n        <div class=\"row\" style=\"width: 100%\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\" style=\"width:101% !important\">\r\n          \r\n              <label for=\"statistics_function\" style=\"font-weight: bold\">{{ udfTitles.STATISTICS_FUNCTION}}:</label>\r\n            </div>\r\n            <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\" \r\n                        id=\"statistics_function\" \r\n                        name=\"statistics_functions\"\r\n                        style=\"padding-right: 10px; width: 100%\" \r\n                        [(ngModel)]=\"newReportService.selectedStatisticsFunction\" required #statFunctionSelect=\"ngModel\"\r\n                        (change)=\"onStatisticsFunctionChange($event)\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': statFunctionSelect.invalid && statFunctionSelect.touched,\r\n                          'is-valid': statFunctionSelect.valid && statFunctionSelect.touched\r\n                        }\">\r\n                  <option *ngFor=\"let func of newReportService.statistics_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #statisticsFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.STATISTICS_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(statisticsFunctionImgElement,udfTypes.STATISTICS_FUNCTIONS,udfTitles.STATISTICS_FUNCTION,newReportService.selectedStatisticsFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.STATISTICS_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n\r\n        \r\n        <!-- Confusion Function -->\r\n        <div class=\"row\" style=\"width: 100%\">\r\n          <div class=\"col\">\r\n          <div class=\"form-group\" style=\"width:100% !important\">\r\n              <label for=\"Confusion_function\" style=\"font-weight: bold\">{{ udfTitles.CONFUSION_FUNCTION}}:</label>\r\n          </div>\r\n          <div style=\"display: flex; align-items: center;\">\r\n                <select class=\"form-select form-select-sm\" \r\n                        id=\"Confusion_function\" \r\n                        name=\"confusion_functions\"\r\n                        style=\"padding-right: 10px; width: 100%\" \r\n                        [(ngModel)]=\"newReportService.selectedConfusionFunction\" required #confFunctionSelect=\"ngModel\"\r\n                        (change)=\"onConfusionFunctionChange($event)\"\r\n                        [ngClass]=\"{\r\n                          'is-invalid': confFunctionSelect.invalid && confFunctionSelect.touched,\r\n                          'is-valid': confFunctionSelect.valid && confFunctionSelect.touched\r\n                        }\">\r\n                  <option *ngFor=\"let func of newReportService.confusion_functions\" [value]=\"func\">{{func}}</option>\r\n                </select>\r\n                <img #ConfusionFunctionImg \r\n                      [src]=\"getArgumentSvg(udfTypes.CONFUSION_FUNCTIONS)\" \r\n                      (click)=\"showArgumentsPanel(confusionFunctionImgElement,udfTypes.CONFUSION_FUNCTIONS,udfTitles.CONFUSION_FUNCTION,newReportService.selectedConfusionFunction)\"\r\n                      [ngStyle]=\"{'pointer-events': enableArgumentsButton(udfTypes.CONFUSION_FUNCTIONS) ? 'all' : 'none'}\"\r\n                      style=\"margin-left: 5px; cursor: pointer;\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      </div> \r\n    </div>     \r\n    <div class=\"form-footer\">\r\n        <button type=\"button\" style=\"margin-bottom: 5px;\"\r\n                 class=\"btn btn btn-primary btn-mdcd\" \r\n                 [disabled]=\"disableSaveButton()\"\r\n                 (click)=\"newReportService.saveConfig()\">Save</button>\r\n    </div>\r\n</div>\r\n\r\n<udf-arguments [top]=\"newReportService.argPanelTop\" [left]=\"newReportService.argPanelLeft\" [show]=\"newReportService.showParams\">\r\n\r\n</udf-arguments>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NewReportService, UDF } from 'src/app/services/new-report.service';\r\n\r\n@Component({\r\n  selector: 'udf-arguments',\r\n  templateUrl: './udf-arguments.component.html',\r\n  styleUrls: ['./udf-arguments.component.css']\r\n})\r\nexport class UdfArgumentsComponent implements OnInit,OnDestroy {\r\n\r\n  subscribeOpenArgs = new Subscription;\r\n  \r\n  @Input() top  = '';\r\n  @Input() left = '';\r\n  @Input() show = false;\r\n\r\n  data:any;\r\n  func_name = ''\r\n  params:UDF.Param[] = [];\r\n  \r\n  constructor(public newReportSvc:NewReportService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribeOpenArgs = this.newReportSvc.showArgumentsEvent.subscribe(data => {\r\n      this.data = data;\r\n      this.func_name = data?data.funcName:'';\r\n      this.params = data?data.udfItem.params:[];\r\n    })\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    if (this.subscribeOpenArgs)\r\n      this.subscribeOpenArgs.unsubscribe();\r\n  }\r\n\r\n\r\n  close(){\r\n    this.newReportSvc.showParams = false;\r\n  }\r\n\r\n  getTitle(){\r\n    if (this.data != null)\r\n      return this.data.title;\r\n    return '';\r\n  }\r\n}\r\n","<div class=\"params-container\" *ngIf=\"show\" \r\n    [style.top]=\"top\" \r\n    [style.left]=\"left\"\r\n    style=\"margin-left: 30px;\">\r\n    <div class=\"params-header\" >\r\n        <div class=\"titleText\">{{ getTitle() }} </div>\r\n        <div class=\"closeButton\" (click)=\"close()\">X</div>\r\n    </div>\r\n    <div class=\"params-content\">\r\n        <div class=\"row text-center\" style=\"width:100%;margin-bottom: 7px;\">\r\n            <div class=\"col\">\r\n              <div class=\"form-group\">\r\n                <label style=\"font-weight: bold\">Args of {{func_name}}</label>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngFor=\"let p of params; let i = index\">\r\n            <div class=\"row\" style=\"width:100%;margin-bottom: 7px;\">\r\n                <div class=\"col\">\r\n                  <div class=\"form-group\">\r\n                    <label style=\"font-weight: bold\">{{p.name}}:</label>\r\n                    <input type=\"text\" class=\"form-control form-control-sm\" \r\n                          style=\"min-height: 0px !important;width:100%;padding-right: 10px;\" \r\n                          [(ngModel)]=\"p.value\"\r\n                          name=\"{{p.name}}\"\r\n                          >\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'drawer-content',\r\n  templateUrl: './drawer-content.component.html',\r\n  styleUrls: ['./drawer-content.component.css']\r\n})\r\nexport class DrawerContentComponent implements OnInit {\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    if (event.key === \"Escape\") {\r\n        this.closeDrawer();\r\n    }\r\n  }\r\n\r\n  constructor(public statToolService:StatisticsToolService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngOnDestroy(){\r\n  }\r\n\r\n  closeDrawer(){\r\n    this.statToolService.showDrawer = false;\r\n  }\r\n}\r\n","<div style=\"height:40px;width:100%;display: flex;justify-content: space-between;direction: rtl;\">\r\n    <div style=\"margin:5px\">\r\n        <img src=\"assets/cancel-icon.svg\" style=\"height:33px;width: 33px;position:relative;cursor: pointer;\"\r\n                                  title=\"Close Drawer\" (click)=\"closeDrawer()\">\r\n    </div>\r\n</div>\r\n<div style=\"height: 100vh;width: 100%;display: flex;\">\r\n    <div style=\"width:60%;height: 92%;\">\r\n        <iframe\r\n            style=\"display:block; width:100%; height:85%;margin-top: 0px;border:none;\"\r\n            [src]=\"statToolService.getDrawerUpdateListUrl() | safe\">\r\n        </iframe>\r\n    </div>\r\n    <div style=\"width:40%;height: 92%;min-width: 600px;\">\r\n        <iframe\r\n            style=\"display:block; width:98%;  height:95%;margin-top: 0px;border:none;\"\r\n            [src]=\"statToolService.getDrawerShowImageUrl() | safe\">\r\n        </iframe>\r\n    </div>\r\n</div>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.css'],\r\n  animations: [\r\n    trigger('widthGrow', [\r\n      state('closed', style({\r\n        width: 0,\r\n      })),\r\n      state('open', style({\r\n        width: 400\r\n      })),\r\n      transition('* => *', animate(150))\r\n    ]),\r\n  ]\r\n})\r\nexport class DrawerComponent implements OnInit {\r\n\r\n  state = \"closed\";\r\n  subscribeOpenDrawer = new Subscription;\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    console.log('keydown',event.key)\r\n    if (event.key === \"Escape\") {\r\n        this.statToolSvc.showDrawer = false;\r\n    }\r\n  }\r\n\r\n  changeState(): void {\r\n    (this.state == \"closed\") ? this.state = \"open\" : this.state = \"closed\";\r\n    console.log('Drawer state - ' + this.state);\r\n  }\r\n\r\n  constructor(public statToolSvc:StatisticsToolService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeOpenDrawer = this.statToolSvc.openDrawer.subscribe(msg => {\r\n      this.statToolSvc.showDrawer = true;\r\n      this.statToolSvc.drawerShowImageUrl = '';\r\n      this.changeState();\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if (this.subscribeOpenDrawer != null)\r\n      this.subscribeOpenDrawer.unsubscribe();\r\n  }\r\n\r\n  show = false;\r\n\r\n  clickDrawer(){\r\n    this.statToolSvc.showDrawer = false;\r\n    this.changeState();\r\n  }\r\n}\r\n","<div [@widthGrow]=\"state\"\r\n    *ngIf=\"statToolSvc.showDrawer\"\r\n    style=\"z-index: 1000;position: absolute; height: 100vh;width: 100%;display: flex;margin-top: 50px;\">\r\n        <!-- margin -->\r\n        <div style=\"width:8%;height: 100vh;background-color: transparent;opacity: 0.5;flex-grow: 1;\"\r\n            (click)=\"clickDrawer()\">\r\n        </div>\r\n        <!-- main -->\r\n        <div style=\"width:92%;height: 100vh;background-color: white;position: fixed;box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;right: 0px;\">\r\n            <drawer-content></drawer-content>\r\n        </div>\r\n        \r\n</div>","<div class=\"results\" *ngIf=\"newReportService.showResults()\">\r\n    <h5>Execution Results</h5>\r\n    <div class=\"navigation\" *ngIf=\"newReportService.newReportResult.link != ''\">\r\n      <a href=\"{{newReportService.newReportResult.link}}\" class=\"link\">Open Report</a>\r\n    </div>\r\n    <ng-container *ngIf=\"newReportService.newReportResult.link == ''\">\r\n      <div class=\"error-message\">\r\n          <p><strong>Report Creation Failed.</strong></p>\r\n      </div>\r\n    </ng-container>\r\n    <div>\r\n    <ng-container *ngIf=\"newReportService.newReportResult.ok == true\">\r\n        <div class=\"key-value-pairs\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Config</th>\r\n                      <th># Success</th>\r\n                      <th># Skipped</th>\r\n                      <th>Not Json</th>\r\n                      <th># Failed</th>\r\n                      <th>Filtered</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let file of newReportService.newReportResult.files;let i = index\">\r\n                      <td>{{ file }}</td>\r\n                      <td>{{ newReportService.newReportResult.num_success_files[i] }}</td>\r\n                      <td>{{ newReportService.newReportResult.reading_function_skipped[i] }}</td>\r\n                      <td>{{ newReportService.newReportResult.not_json_files[i] }}</td>\r\n                      <td>{{ newReportService.newReportResult.failed_with_error[i] }}</td>\r\n                      <td>{{ newReportService.newReportResult.skipped_not_in_lognames[i] }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!(newReportService.newReportResult.ok == true)\">\r\n        <div class=\"error-message\">\r\n            <p><strong>{{ newReportService.newReportResult.errorMessage }}</strong></p>\r\n        </div>\r\n    </ng-container>\r\n   \r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { NewReportService } from 'src/app/services/new-report.service';\r\n\r\n@Component({\r\n  selector: 'new-report-result',\r\n  templateUrl: './new-report-result.component.html',\r\n  styleUrls: ['./new-report-result.component.css']\r\n})\r\nexport class NewReportResultComponent {\r\n  \r\n  constructor(public newReportService:NewReportService) {\r\n    \r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport { NewReportService, SELECTE_SUITE } from '../services/new-report.service';\r\nimport { Observable, OperatorFunction, debounceTime, distinctUntilChanged, map } from 'rxjs';\r\n@Component({\r\n  selector: 'new-report',\r\n  templateUrl: './new-report.component.html',\r\n  styleUrls: ['./new-report.component.css']\r\n})\r\nexport class NewReportComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private location:Location,\r\n              public  newReportService:NewReportService){\r\n\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  backImgSrc = 'assets/back-icon-blue.svg';\r\n  formatter = (result: string) => result.toUpperCase();\r\n\r\n  public onFocus(e: Event): void {\r\n    e.stopPropagation();\r\n    setTimeout(() => {\r\n      const inputEvent: Event = new Event('input');\r\n      e.target!.dispatchEvent(inputEvent);\r\n    }, 0);\r\n  }\r\n\r\n  searchPredictionsDirectory: OperatorFunction<string, readonly string[]> = (\r\n    text$: Observable<string>\r\n  ) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map((term) =>\r\n        term === ''\r\n          ? this.newReportService.last_prediction_directory.slice(0,10)\r\n          : this.newReportService.last_prediction_directory\r\n              .filter((v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n              .slice(0, 10)\r\n      )\r\n    );\r\n\r\n    searchGTDirectroy: OperatorFunction<string, readonly string[]> = (\r\n      text$: Observable<string>\r\n    ) =>\r\n      text$.pipe(\r\n        debounceTime(200),\r\n        distinctUntilChanged(),\r\n        map((term) =>\r\n          term === ''\r\n            ? this.newReportService.last_ground_truth_directory\r\n            : this.newReportService.last_ground_truth_directory\r\n                .filter((v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n                .slice(0, 10)\r\n        )\r\n      );  \r\n\r\n      searchOutputDirectroy: OperatorFunction<string, readonly string[]> = (\r\n        text$: Observable<string>\r\n      ) =>\r\n        text$.pipe(\r\n          debounceTime(200),\r\n          distinctUntilChanged(),\r\n          map((term) =>\r\n            term === ''\r\n              ? this.newReportService.last_output_directory\r\n              : this.newReportService.last_output_directory\r\n                  .filter((v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n                  .slice(0, 10)\r\n          )\r\n        );  \r\n\r\n  back(){\r\n    let path = this.location.path();\r\n    console.log('path',path)\r\n    if (path.indexOf('/static/') > 0){\r\n      path = path.replace('/static/','/');\r\n      console.log('path-remove-static',path)\r\n    }\r\n    window.location.href = 'http://127.0.0.1:5000/';\r\n  }\r\n\r\n  isSelectSuiteValid(){\r\n    if (this.newReportService.selectedSuite != SELECTE_SUITE)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  disableCreateReportButton(){\r\n    return (this.newReportService.predictionsDirectory.length < 3) || \r\n           (this.newReportService.reporterOutputDirectory.length < 3) ||\r\n           (this.newReportService.getNumConfigsSelected() == 0)            \r\n  }\r\n}\r\n","<div class=\"centered-image\" *ngIf=\"newReportService.isBusy\" style=\"z-index:999999\">\r\n    <img src=\"assets/spinner-90-ring-with-bg.svg\" style=\"width:40px;height:40x\" />\r\n  </div>\r\n<div style=\"height:100%\">\r\n    <div style=\"width:100%;\r\n                height:50px;\r\n                border:1px solid lightgray;\r\n                border-radius: 4px;\r\n                color:#182a69;\r\n                background-color: #E4F0F5;\r\n                position: absolute;\r\n                z-index:0;\r\n                top:0px\">\r\n        <div class=\"template-selection\" style=\"margin-left: 10px;padding-top: 8px;\">\r\n            <div style=\"display: flex;width:100%;height: 40px;\">\r\n                <div class=\"back-icon\" style=\"margin-top:-2px;width:40px\">\r\n                    <img [src]=\"backImgSrc\"\r\n                        (mouseover)=\"backImgSrc = 'assets/back-icon-orange.svg'\"\r\n                        (mouseout)=\"backImgSrc = 'assets/back-icon-blue.svg'\"\r\n                        style=\"width: 33px;height:33px;margin-top: 3px;cursor: pointer;\" \r\n                        title=\"Back\"\r\n                        class=\"back\"\r\n                        (click)=\"back()\">\r\n                </div>\r\n                <div style=\"margin-left:5px\">\r\n                    <h3 style=\"font-weight: bold;\">NEW REPORT</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div style=\"display: flex;position: relative;margin-right: 20px;\" autocomplete=\"on\">\r\n            <div class=\"overlay\" [class.show]=\"newReportService.isBusy\"></div>\r\n            <form class=\"form-container\">\r\n                <div class=\"form-header\">\r\n                    Crate New Report \r\n                </div>\r\n                <div class=\"form-content\">\r\n                    <div class=\"main-div\">\r\n                        <div class=\"input-label\" style=\"display: flex;align-items: center;margin-top: 3px;\">\r\n                            <label for=\"reports_suites\" style=\"font-weight: bold;margin-right: 5px;\">Reports Suites:</label>\r\n                            <div class=\"select-input\" style=\"flex-grow: 1;\">\r\n                                <select class=\"form-select form-select-sm\" id=\"reports_suites\"\r\n                                        [(ngModel)]=\"newReportService.selectedSuite\"\r\n                                        name=\"reports_suites\"\r\n                                        (change)=\"newReportService.onSuiteSelected($event)\"\r\n                                        >\r\n                                        <option *ngFor=\"let suite of newReportService.suites\"\r\n                                                        value=\"{{suite}}\"\r\n                                                >{{suite}}\r\n                                        </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"link-button\" style=\"\r\n                                        right: 5px !important;\r\n                                        position: relative;\r\n                                        margin-right: 3px;\r\n                                        margin-left: 10px;\r\n                                        margin-top: 4px;\">\r\n                                <a class=\"link-a-cls\" (click)=\"newReportService.openSaveSuiteDialog()\">Save Suite</a>  \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"combined-section\">\r\n                            <div class=\"scrollable-div\" style=\"border-bottom:1px solid lightgray;background: white;\">\r\n                                <div class=\"scrollable-content\">\r\n                                    <a style=\"margin-left: 28px;color:#28a745;text-decoration: underline;cursor: pointer;\" (click)=\"newReportService.clearConfigViewer()\">Add new configuration</a>\r\n                                    <ng-container *ngFor=\"let config of newReportService.configs\">\r\n                                        <div class=\"form-check\" style=\"margin-left:4px\">\r\n                                            <input class=\"form-check-input\" \r\n                                                    type=\"checkbox\" \r\n                                                    [checked]=\"newReportService.isConfigSelected(config)\"\r\n                                                    (change)=\"newReportService.configSelectionChanged($event,config)\"\r\n                                            />\r\n                                            <label class=\"form-check-label\" (click)=\"newReportService.showConfig(config)\" \r\n                                                    style=\"cursor: pointer;\r\n                                                            color: blue;\r\n                                                            text-decoration: underline;\">{{config}}</label>\r\n                                            </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-inputs dropdown-wrapper\">\r\n                            <div class=\"input-sm\">\r\n                                <label for=\"predictions_directory\" style=\"width:30%;font-weight: bold;\">Predictions Directory:</label>\r\n                                <input type=\"text\" class=\"form-control input-sm\" id=\"predictions_directory\" \r\n                                    (focus)=\"onFocus($event)\" \r\n                                    placeholder=\"Local directory or blob folder\" \r\n                                    name=\"predictions_directory\"\r\n                                    minlength=\"0\" \r\n                                    required \r\n                                    #predictionsDirectoryInput=\"ngModel\"\r\n                                    [(ngModel)]=\"newReportService.predictionsDirectory\"\r\n                                    [ngClass]=\"{\r\n                                        'is-invalid': predictionsDirectoryInput.invalid && (predictionsDirectoryInput.dirty || predictionsDirectoryInput.touched),\r\n                                        'is-valid': predictionsDirectoryInput.valid && (predictionsDirectoryInput.dirty || predictionsDirectoryInput.touched)\r\n                                    }\"\r\n                                >\r\n                            </div>\r\n                            <div class=\"input-sm\">\r\n                                <label for=\"ground_truth_directory\" style=\"width:30%;font-weight: bold;\">Ground Truth Directory:</label>\r\n                                <input type=\"text\" class=\"form-control input-sm\" id=\"ground_truth_directory\" placeholder=\"Leave blank if GT is from annotation store\" \r\n                                        (focus)=\"onFocus($event)\"   \r\n                                        name=\"ground_truth_directory\"\r\n                                        minlength=\"0\"\r\n                                        [(ngModel)]=\"newReportService.groundTruthDirectory\"\r\n                                        >\r\n                            </div>\r\n                            <div class=\"input-sm\">\r\n                                <label for=\"output_directory\" style=\"width:30%;font-weight: bold;\">Output Directory:</label>\r\n                                <input type=\"text\" class=\"form-control input-sm\" id=\"output_directory\" \r\n                                    (focus)=\"onFocus($event)\" \r\n                                    placeholder=\"\" name=\"output_directory\"\r\n                                    minlength=\"0\" \r\n                                    required \r\n                                    #reporterOutputDirectoryInput=\"ngModel\"\r\n                                    [(ngModel)]=\"newReportService.reporterOutputDirectory\"\r\n                                    [ngClass]=\"{\r\n                                        'is-invalid': reporterOutputDirectoryInput.invalid && (reporterOutputDirectoryInput.dirty || reporterOutputDirectoryInput.touched),\r\n                                        'is-valid': reporterOutputDirectoryInput.valid && (reporterOutputDirectoryInput.dirty || reporterOutputDirectoryInput.touched)}\"\r\n                                        \r\n                                    >\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-footer\">\r\n                    <button type=\"submit\"  style=\"margin-bottom: 5px;\"\r\n                            class=\"btn btn btn-primary btn-mdcd\"\r\n                            (click)=\"newReportService.createReport()\"\r\n                            [disabled]=\"disableCreateReportButton()\">Create Report</button>\r\n                </div>\r\n            </form>\r\n            <div style=\"width:30%;margin-top: 10px;\">\r\n                <configuration-viewer></configuration-viewer>\r\n            </div>\r\n        </div>\r\n        \r\n        <div style=\"width: 39.6%;\r\n                    margin-top: 10px;\r\n                    margin-left: 20px;\r\n                    max-height: 25vh;\r\n                    overflow-y: auto;\r\n                    overflow-x: hidden;\">\r\n            <new-report-result></new-report-result>                    \r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, HostListener, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\nimport { Utils } from '../utils';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'pkl-view',\r\n  templateUrl: './pkl-view.component.html',\r\n  styleUrls: ['./pkl-view.component.css']\r\n})\r\nexport class PklViewComponent implements OnInit  {\r\n\r\n  @ViewChild('iframe') iframe: ElementRef|null = null;\r\n  \r\n  url = '/viewer/get_report_table';\r\n  \r\n  selectedRows = '';\r\n  @Input() set selectedRowsSet(rows:string[]){\r\n    //filter only the existing rows\r\n    let tmp:string[] = [];\r\n    let keys = Array.from( this.statToolService.optionalSegmentations.keys() );\r\n    rows.forEach(r => {\r\n      let isExist = keys.find(x => x == r)\r\n      if (isExist)\r\n      tmp.push(r)\r\n    })\r\n\r\n    this.selectedRows = tmp.join(',');\r\n  }\r\n  @Input() viewguid = '';\r\n  @Input() selectedColumns = '';\r\n  @Input() set selectedColumnsSet(cols:string[]){\r\n        //filter only the existing columns\r\n        let tmp:string[] = [];\r\n        let keys = Array.from( this.statToolService.optionalSegmentations.keys() );\r\n        cols.forEach(c => {\r\n          let isExist = keys.find(x => x == c)\r\n          if (isExist)\r\n          tmp.push(c)\r\n        })\r\n    \r\n        this.selectedColumns = tmp.join(',');\r\n  }\r\n  @Input() name = '';\r\n  @Input() id = 0;\r\n    \r\n  loadCounter = 0;\r\n\r\n  subscribeUniqueChange = new Subscription;\r\n  subscribeReportChanged = new Subscription;\r\n\r\n  height:string = '';\r\n\r\n  constructor(public statToolService:StatisticsToolService) {\r\n    this.url = '/viewer/get_report_table?calc_unique=' + statToolService.calculateUnique + \"&main_path=\" + this.statToolService.getSelectedMainReport() + \"&ref_path=\" + this.statToolService.getSelectedRefReport();\r\n  }\r\n\r\n  setUrl(){\r\n    this.url = '/viewer/get_report_table?cols=' + this.selectedColumns \r\n      + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n      + \"&main_path=\" + this.statToolService.getSelectedMainReport() + \"&ref_path=\" + this.statToolService.getSelectedRefReport();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n                  \r\n    this.fixSelectedString();\r\n    this.setUrl();\r\n    this.loadCounter = 1;\r\n\r\n    this.subscribeUniqueChange = this.statToolService.uniqueValueChanged.subscribe(res => {\r\n      this.loadCounter = 1;\r\n      this.setUrl();\r\n    })\r\n\r\n    this.subscribeReportChanged = this.statToolService.reportSelected.subscribe(res => {\r\n      this.fixSelectedString();\r\n      this.loadCounter = 1;\r\n      this.setUrl();\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if (this.subscribeUniqueChange != null)\r\n      this.subscribeUniqueChange.unsubscribe();\r\n    if (this.subscribeReportChanged != null)\r\n      this.subscribeReportChanged.unsubscribe();\r\n  }\r\n\r\n  onColumnAdded(item:{'item_id':string,'item_text':string}){\r\n    if (this.selectedColumns.length == 0 )\r\n      this.selectedColumns = item.item_id;\r\n    else\r\n      this.selectedColumns += \",\" + item.item_id;\r\n    \r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n\r\n  onAllColumnsAdded(items:{'item_id':string,'item_text':string}[]){\r\n    this.selectedColumns = '';\r\n    items.forEach(x => {\r\n      this.selectedColumns += x.item_id + \",\"\r\n    })\r\n\r\n    this.fixSelectedString();\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n  \r\n  onColumnRemoved(item:{'item_id':string,'item_text':string}){\r\n    let columns = this.selectedColumns.split(\",\");\r\n    this.selectedColumns = '';\r\n    columns.forEach(c => {\r\n      if (c != item.item_text){\r\n        this.selectedColumns += c + \",\"\r\n      }\r\n    })\r\n\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n\r\n  onAllColumnsRemoved(event:any){\r\n    this.selectedColumns = '';\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n\r\n  onRowAdded(item:{'item_id':string,'item_text':string}){\r\n    if (this.selectedRows.length == 0 )\r\n      this.selectedRows = item.item_id;\r\n    else\r\n      this.selectedRows += \",\" + item.item_id;\r\n    \r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n\r\n  onAllRowsAdded(items:{'item_id':string,'item_text':string}[]){\r\n    this.selectedRows = '';\r\n    items.forEach(x => {\r\n      this.selectedRows += x.item_id + \",\"\r\n    })\r\n\r\n    this.fixSelectedString();\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n  \r\n  onRowRemoved(item:{'item_id':string,'item_text':string}){\r\n    let columns = this.selectedRows.split(\",\");\r\n    this.selectedRows = '';\r\n    columns.forEach(c => {\r\n      if (c != item.item_text){\r\n        this.selectedRows += c + \",\"\r\n      }\r\n    })\r\n\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n\r\n  onAllRowsRemoved(event:any){\r\n    this.selectedRows = '';\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.setUrl();\r\n  }\r\n\r\n  fixSelectedString(){\r\n    if (this.selectedColumns.slice(-1) == \",\")  \r\n      this.selectedColumns = this.selectedColumns.slice(0,-1);\r\n    if (this.selectedRows.slice(-1) == \",\")  \r\n      this.selectedRows = this.selectedRows.slice(0,-1);\r\n\r\n  }\r\n\r\n  async onIframeLoad(){\r\n    this.loadCounter = this.loadCounter - 1;\r\n    \r\n    if (this.iframe != null){\r\n      let loop = true;\r\n      while(loop){\r\n        await Utils.sleep(100);\r\n        let h = this.iframe.nativeElement.contentWindow.document.body.scrollHeight;\r\n        if (h > 100){\r\n          h += 100;\r\n          this.height = h.toString() + 'px';\r\n          this.statToolService.viewHeights.set(this.id,this.height);  \r\n          loop = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onViewNameChanged(event:any){\r\n    this.statToolService.updateSegmentationName(this.name,this.id,event.target.value);\r\n  }\r\n\r\n  removeView(){\r\n    this.statToolService.removeView(this.viewguid);\r\n  }\r\n\r\n}\r\n","<div class=\"parent\" style=\"border:1px solid lightgray;padding: 3px;\">\r\n    <div *ngIf=\"loadCounter > 0\">\r\n        <img src=\"assets/spinner-90-ring-with-bg.svg\" style=\"width:40px;height:40x\" />\r\n    </div>\r\n    <div style=\"width:99.6%;padding:3px;border:solid 1px lightgray;\r\n                border-radius: 4x !important;margin-top: 3px;\r\n                color:#182a69;background-color:#fafafa\"\r\n         class=\"pkl-view-header\">\r\n            <div style=\"width:100%\">\r\n                <table style=\"width:100%\">\r\n                    <tr>\r\n                        <td style=\"width:20%\">\r\n                            <input type=\"text\" \r\n                                class=\"view-name\"\r\n                                [ngModel]=\"name\"\r\n                                placeholder=\"View Name\"\r\n                                (change)=\"onViewNameChanged($event)\"\r\n                                style=\"padding-left:5px;height:38px;width:96%;border:1px solid #adadad;border-radius: 3px;\"\r\n                            > \r\n                        </td>\r\n                        <td style=\"width:38%\">\r\n                            <segmentations \r\n                                style=\"width:95%;background-color: white;margin-top: 2px;\"\r\n                                name=\"Horizontal Segmentation\"\r\n                                elementRef = \"Horizontal_Segmentation\"\r\n                                [viewId] = \"id\"\r\n                                [viewguid] = \"viewguid\"\r\n                                [selectItems]=\"selectedColumns\"\r\n                                (segmentAdded)=\"onColumnAdded($event)\"\r\n                                (segmentRemoved)=\"onColumnRemoved($event)\"\r\n                                (allSegmentsAdded)=\"onAllColumnsAdded($event)\"\r\n                                (allSegmentsRemoved)=\"onAllColumnsRemoved($event)\">\r\n                                >\r\n                            </segmentations>\r\n                        </td>\r\n                        <td style=\"width:38%\">\r\n                            <segmentations \r\n                                style=\"width:95%;background-color: white;\"\r\n                                name=\"Vertical Segmentation\" \r\n                                elementRef = \"Vertical_Segmentation\"\r\n                                [viewId] = \"id\"\r\n                                [viewguid] = \"viewguid\"\r\n                                [selectItems]=\"selectedRows\"\r\n                                (segmentAdded)=\"onRowAdded($event)\"\r\n                                (segmentRemoved)=\"onRowRemoved($event)\"\r\n                                (allSegmentsAdded)=\"onAllRowsAdded($event)\"\r\n                                (allSegmentsRemoved)=\"onAllRowsRemoved($event)\">\r\n                            </segmentations>\r\n                        </td>\r\n                        <td style=\"text-align: right;\"> \r\n                            <img src=\"assets/cancel-icon.svg\" style=\"height:33px;width: 33px;position:relative;cursor: pointer;\"\r\n                                  title=\"Remove View\" (click)=\"removeView()\">\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    <iframe (load)=\"onIframeLoad()\" \r\n            #iframe\r\n            style=\"display:block; width:100%; margin-top: 3px;border:none\"\r\n            [src]=\"url | safe\"\r\n            [ngStyle]=\"{'height': height}\">\r\n    </iframe>\r\n    <div *ngIf=\"statToolService.showFileNotFoundError()\" \r\n        style=\"position: sticky;bottom: 200px;z-index: 99999999;\">\r\n        <ngb-alert type=\"danger\" (closed)=\"statToolService.fileNotFoundError = ''\">{{ statToolService.fileNotFoundError }}</ngb-alert>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { NewReportService, SELECTE_SUITE } from '../services/new-report.service';\r\n\r\n@Component({\r\n  selector: 'save-suite-dialog',\r\n  templateUrl: './save-suite-dialog.component.html',\r\n  styleUrls: ['./save-suite-dialog.component.css']\r\n})\r\nexport class SaveSuiteDialogComponent {\r\n  \r\n  suiteName = '';\r\n\r\n  constructor(public newReportService:NewReportService) {\r\n    \r\n    let name = this.newReportService.getSelectedSuiteName();\r\n    if (name == SELECTE_SUITE){\r\n      this.suiteName = '';\r\n    } else {\r\n      this.suiteName = name;\r\n    }\r\n    \r\n  }\r\n  close(){\r\n    this.newReportService.closeSaveSuiteDialog();\r\n  }\r\n\r\n  save(){\r\n    if (this.suiteName == '')\r\n      return;\r\n    this.newReportService.saveSuite(this.suiteName)\r\n    this.close();\r\n  }\r\n\r\n  disableSaveButton(){\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Save Suite</h4>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"close()\"></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form>\r\n        <div class=\"mb-3\">\r\n            <label for=\"name\">Suite Name</label>\r\n            <div class=\"input-group\">\r\n                <input\r\n                    id=\"suiteName\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Suite Name\"\r\n                    [(ngModel)]=\"suiteName\"\r\n                    name = \"suiteName\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"save()\" >Save</button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'save-template-dialog',\r\n  templateUrl: './save-template-dialog.component.html',\r\n  styleUrls: ['./save-template-dialog.component.css']\r\n})\r\nexport class SaveTemplateDialogComponent {\r\n\r\n  templateName = '';\r\n\r\n  constructor(public statService:StatisticsToolService) {\r\n    let name = this.statService.getSelectedTemplateName();\r\n    if (name == 'Default (Total)'){\r\n      this.templateName = '';\r\n    } else {\r\n      this.templateName = name;\r\n    }\r\n    \r\n  }\r\n  close(){\r\n    this.statService.closeSaveTempalteDialog();\r\n  }\r\n\r\n  save(){\r\n    if (this.templateName == '')\r\n      return;\r\n    this.statService.saveTemplate(this.templateName)\r\n    this.close();\r\n  }\r\n\r\n  disableSaveButton(){\r\n    return false;\r\n  }\r\n} \r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Save Template</h4>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"close()\"></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form>\r\n        <div class=\"mb-3\">\r\n            <label for=\"name\">Template Name</label>\r\n            <div class=\"input-group\">\r\n                <input\r\n                    id=\"templateName\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Tempalte Name\"\r\n                    [(ngModel)]=\"templateName\"\r\n                    name = \"templateName\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"save()\" >Save</button>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { States, StatisticsToolService } from '../services/statistics-tool.service';\r\nimport { CommonService } from '../services/common.service';\r\n\r\n@Component({\r\n  selector: 'segmentations',\r\n  templateUrl: './segmentations.component.html',\r\n  styleUrls: ['./segmentations.component.css']\r\n})\r\nexport class SegmentationsComponent implements OnInit{\r\n  @ViewChild('dropdown', { static: false }) dropdown: ElementRef|undefined;\r\n  isDropdownOpen = false;\r\n\r\n  toggleDropdown() {\r\n    this.isDropdownOpen = !this.isDropdownOpen;\r\n  }\r\n  \r\n  @Input() set selectItems(items:string){\r\n    if (items == \",\" || items == \"\" || items == ' ')\r\n      return;\r\n    let arr = items.split(',')\r\n    this.selected = []\r\n    arr.forEach(a => {\r\n      this.selected.push({'item_id':a,'item_text':a})\r\n    })\r\n    \r\n  }\r\n  @Input() viewId = 0;\r\n  @Input() name = '';\r\n  @Input() elementRef = '';\r\n  @Input() viewguid = '';\r\n\r\n  dropdownList : {'item_id':string,'item_text':string}[] = [];\r\n  selected     : {'item_id':string,'item_text':string}[] = [];\r\n  \r\n  dropdownSettings = {};\r\n  subscribeSegmentationsFetched = new Subscription;\r\n  \r\n  @Output() segmentAdded        = new EventEmitter();\r\n  @Output() segmentRemoved      = new EventEmitter();\r\n  @Output() allSegmentsAdded    = new EventEmitter();\r\n  @Output() allSegmentsRemoved  = new EventEmitter();\r\n\r\n  constructor(private statToolService:StatisticsToolService,\r\n              private httpClient:HttpClient,\r\n              private commonSvc:CommonService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      \r\n      for (let [key, value] of this.statToolService.optionalSegmentations) {\r\n        this.dropdownList.push({'item_id':key,'item_text':key})\r\n      }\r\n\r\n      this.dropdownSettings = {\r\n        singleSelection: false,\r\n        idField: 'item_id',\r\n        textField: 'item_text',\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        itemsShowLimit: 100,\r\n        allowSearchFilter: true,\r\n      };\r\n\r\n      /*this.commonSvc.onMouseClicked.subscribe(event => {\r\n        this.isDropdownOpen = false;\r\n        console.log(this.isDropdownOpen +\",\" + event.target)\r\n        if (this.dropdown != undefined)\r\n          if (!this.dropdown.nativeElement.contains(event.target)) {\r\n            this.isDropdownOpen = false;\r\n          }\r\n      })*/\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log('onItemSelect',item);\r\n    this.segmentAdded.emit(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log('onSelectAll',items);\r\n    this.allSegmentsAdded.emit(items);\r\n  }\r\n  onUnSelect(item: any) {\r\n    console.log('onUnSelect',item);\r\n    this.segmentRemoved.emit(item)\r\n  }\r\n\r\n  onUnSelectAll(item: any) {\r\n    console.log('onUnSelectAll',item);\r\n    this.allSegmentsRemoved.emit([])\r\n  }\r\n\r\n  onClick(event:any){\r\n    let name = this.dropdown?.nativeElement.parentElement.attributes['name'].value;\r\n\r\n    if (!this.dropdown?.nativeElement.querySelectorAll('.dropdown-list')[0].hidden){\r\n      this.statToolService.setDropdownState(this.viewguid,name,States.Opened);\r\n      return;\r\n    }\r\n  \r\n    this.statToolService.setDropdownState(this.viewguid,name,States.Close);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if (this.subscribeSegmentationsFetched != null)\r\n      this.subscribeSegmentationsFetched.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"dropdownList.length > 0\" [class.dropdown-open]=\"isDropdownOpen\" class=\"dropdown-wrapper\" #dropdown>\r\n    <ng-multiselect-dropdown\r\n        appClickOutside\r\n        [viewguid]=\"viewguid\"\r\n        [viewId]=\"viewId\"\r\n        [segmentName]=\"name\"\r\n        [placeholder]=\"name\"\r\n        [settings]=\"dropdownSettings\"\r\n        [data]=\"dropdownList\"\r\n        [(ngModel)]=\"selected\"\r\n        (onSelect)=\"onItemSelect($event)\"\r\n        (onSelectAll)=\"onSelectAll($event)\"\r\n        (onDeSelect)=\"onUnSelect($event)\"\r\n        (onDeSelectAll)=\"onUnSelectAll($event)\"\r\n        (click)=\"onClick($event)\"\r\n    >\r\n    </ng-multiselect-dropdown>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor() { }\r\n\r\n  onMouseClicked = new Subject<any>();\r\n\r\n\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SaveSuiteDialogComponent } from \"../save-suite-dialog/save-suite-dialog.component\";\r\nimport { Subject } from \"rxjs\";\r\nimport { UDFConstants, UDFTypeEnum } from \"../common/enums\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const SELECTE_SUITE = '--- Select Suite ---';\r\nexport const NONE_GT_READING_CUNCTION = 'none';\r\nexport class NewReportResult {\r\n    ok = true;\r\n    errorMessage = '';\r\n    link = '';\r\n    files:string[] = [];\r\n    num_success_files:string[] = [];\r\n    reading_function_skipped:string[] = [];\r\n    not_json_files:string[] = [];\r\n    failed_with_error:string[] = [];\r\n    skipped_not_in_lognames:string[] = [];\r\n}\r\n\r\nexport namespace UDF {\r\n    export enum ParamType {\r\n        STRING = 0\r\n    }\r\n\r\n    export class Param {\r\n        \r\n        constructor(name:string,type:string) {\r\n            this.name = name;\r\n            if (type == 'string'){\r\n                this.type = ParamType.STRING;\r\n            }            \r\n        }\r\n\r\n        name = '';\r\n        type = ParamType.STRING;\r\n        value = '';\r\n    }\r\n\r\n    export class Item {\r\n\r\n        constructor(funcName:string,params:Param[]){\r\n            this.funcName = funcName;\r\n            this.params = params;\r\n        }\r\n\r\n        funcName = '';\r\n        params:Param[] = [];\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\nexport class NewReportService {\r\n\r\n    showConfigViewer = true;\r\n\r\n    configs:string[]  = [];\r\n    suites:string []  = [];\r\n    configsSelections = new Map<string,boolean>();\r\n    selectedSuite = '';\r\n\r\n    prediction_reading_functions    :string[] = [];\r\n    gt_reading_functions            :string[] = [];\r\n    evaluation_functions            :string[] = [];\r\n    overlap_functions               :string[] = [];\r\n    partitioning_functions          :string[] = [];\r\n    statistics_functions            :string[] = [];\r\n    transform_functions             :string[] = [];\r\n    confusion_functions             :string[] = [];\r\n    association_functions           :string[] = [];\r\n    \r\n    selectedPredictionReadingFunction   = '';\r\n    selectedGTReadingFunction           = '';\r\n    selectedTransformFunction           = '';\r\n    selectedPartitioningFunction        = '';\r\n    selectedStatisticsFunction          = '';\r\n    selectedConfusionFunction           = '';\r\n    selectedAssociationFunction         = '';\r\n\r\n    configName = '';\r\n    logsFilter = UDFConstants.DEFAULT_LOG_FILTER;\r\n    evaluate_folders = false;\r\n\r\n    predictionsDirectory = '';\r\n    groundTruthDirectory = '';\r\n    reporterOutputDirectory = '';\r\n\r\n    newReportResult = new NewReportResult();\r\n\r\n    isBusy = false;\r\n\r\n    last_prediction_directory   :string[] = [];\r\n    last_ground_truth_directory :string[] = [];\r\n    last_output_directory       :string[] = [];\r\n\r\n    gtReadingSameAsPrediction:  boolean = true;\r\n    transformEnabled:           boolean = false;\r\n    partitioningEnabled:        boolean = false;\r\n    associationEnabled:         boolean = false;\r\n\r\n    isPanelOpen = false;\r\n\r\n    //map between udf type (for example reading_function) to function names\r\n    udf = new Map<string,UDF.Item[]>();\r\n\r\n    showArgumentsEvent = new Subject<{'funcType':string,'funcName':string,'udfItem':UDF.Item,'title':string}>();\r\n    showParams = false;\r\n    argPanelTop = '';\r\n    argPanelLeft = '';\r\n    udfArgumentsMap:{ [key: string]: any } = {};\r\n\r\n    constructor(private http:HttpClient,private modalService: NgbModal){\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        this.isBusy = true;\r\n        await this.initUserDefinedFunction();\r\n        await this.initSuitsAndConfigs();\r\n        this.isBusy = false;\r\n    }\r\n\r\n    private async initSuitsAndConfigs(): Promise<void> {\r\n        try {\r\n            const url = '/new_report/get_all_configs_and_suits';\r\n            const response = await this.http.get<any>(url).toPromise();\r\n            let configs = response.configs;\r\n            let suites = response.suites;\r\n            this.parseConfigs(configs);\r\n            this.initSuitesList(suites);    \r\n            this.selectedSuite = SELECTE_SUITE;\r\n            this.initSelectedConfigs();    \r\n        }\r\n        finally{\r\n\r\n        }\r\n    }\r\n\r\n    private async initUserDefinedFunction(): Promise<void> {\r\n        try {\r\n          const url = '/new_report/get_all_user_defined_functions';\r\n          const response = await this.http.get<any>(url).toPromise();\r\n    \r\n          this.processUdfResponse(response);\r\n    \r\n          this.prediction_reading_functions = this.udf.get(UDFTypeEnum.READING_FUNCTIONS)?.map((o) => o.funcName)!;\r\n          this.prediction_reading_functions.sort((a, b) => (a > b ? 1 : -1));\r\n    \r\n          this.gt_reading_functions = this.prediction_reading_functions;\r\n    \r\n          this.partitioning_functions = this.udf.get(UDFTypeEnum.PARTITIONING_FUNCTIONS)?.map((o) => o.funcName)!;\r\n          this.partitioning_functions.sort((a, b) => (a > b ? 1 : -1));\r\n    \r\n          this.statistics_functions = this.udf.get(UDFTypeEnum.STATISTICS_FUNCTIONS)?.map((o) => o.funcName)!;\r\n          this.statistics_functions.sort((a, b) => (a > b ? 1 : -1));\r\n    \r\n          this.transform_functions = this.udf.get(UDFTypeEnum.TRANSFORM_FUNCTIONS)?.map((o) => o.funcName)!;\r\n          this.transform_functions.sort((a, b) => (a > b ? 1 : -1));\r\n    \r\n          this.confusion_functions = this.udf.get(UDFTypeEnum.CONFUSION_FUNCTIONS)?.map((o) => o.funcName)!;\r\n          this.confusion_functions.sort((a, b) => (a > b ? 1 : -1));\r\n    \r\n          this.association_functions = this.udf.get(UDFTypeEnum.ASSOCIATION_FUNCTIONS)?.map((o) => o.funcName)!;\r\n          this.association_functions.sort((a, b) => (a > b ? 1 : -1));\r\n\r\n        } catch (error) {\r\n          console.error('Error initializing user-defined functions:', error);\r\n        }\r\n    }\r\n\r\n    processUdfResponse(udfResponse:any){\r\n\r\n        for (const value of Object.values(UDFTypeEnum)) {\r\n            \r\n            if (value === UDFTypeEnum.GT_READING_FUNCTIONS) {\r\n              continue;\r\n            }\r\n            let funcs = this.processUdfItem(value, udfResponse);\r\n            this.udf.set(value, funcs);\r\n        }\r\n          \r\n\r\n        let readingFunc = this.udf.get(UDFTypeEnum.READING_FUNCTIONS)\r\n        let gt = JSON.parse(JSON.stringify(readingFunc));\r\n        this.udf.set(UDFTypeEnum.GT_READING_FUNCTIONS,gt);\r\n    }\r\n\r\n    processUdfItem(funcType:string,udfResponse:any){\r\n        let arrFuncs:UDF.Item[] = [];\r\n        let functions = udfResponse[funcType];\r\n        \r\n        if (functions == undefined || functions == null)\r\n            return arrFuncs;\r\n\r\n        for (const func of functions){\r\n            let funcName = func.func_name;\r\n            let funcArguments = func.params;\r\n            let params:UDF.Param[] = [];\r\n            for (const key in funcArguments) {\r\n                if (funcArguments.hasOwnProperty(key)) {\r\n                  const argumentName = key;\r\n                  const argumentValue = funcArguments[key];\r\n                  params.push(new UDF.Param(argumentName,argumentValue))\r\n                }\r\n            }\r\n            arrFuncs.push(new UDF.Item(funcName,params));\r\n        }\r\n\r\n        return arrFuncs;\r\n    }\r\n\r\n    parseConfigs(configs:any){\r\n        this.configs = configs;\r\n        this.configs.sort((a,b) =>  (a > b ? 1 : -1));\r\n    }\r\n\r\n    initSelectedConfigs(){\r\n        this.configsSelections.clear();\r\n\r\n        this.configs.forEach(c => {\r\n            this.configsSelections.set(c.toLocaleLowerCase(),false);\r\n        })\r\n    }\r\n\r\n    initSuitesList(suites:string[]){\r\n        this.suites = [];\r\n        this.suites.push(SELECTE_SUITE);\r\n        \r\n        suites.forEach(s => {\r\n            s = s.replace(\".json\",\"\")\r\n            this.suites.push(s)\r\n        })\r\n\r\n        this.suites.sort((a,b) =>  (a > b ? 1 : -1));\r\n    }\r\n\r\n    onSuiteSelected(event:any){\r\n\r\n        this.initSelectedConfigs();\r\n\r\n        if (event.target.value == SELECTE_SUITE){\r\n            return;\r\n        }\r\n\r\n        let suite = event.target.value + \".json\";\r\n        let params = { 'suite':suite };\r\n        let url = '/new_report/get_suite';\r\n        this.http.get<string[]>(url,{params}).subscribe(configs => {\r\n            configs.forEach(config => {\r\n                config = config.toLocaleLowerCase()\r\n                this.configsSelections.set(config,true)\r\n            })\r\n        })\r\n    }    \r\n\r\n    isConfigSelected(config:string){\r\n        return this.configsSelections.get(config.toLocaleLowerCase());\r\n    }\r\n\r\n    configSelectionChanged(event:any,config:string){\r\n        this.configsSelections.set(config.toLocaleLowerCase(),event.target.checked);\r\n        if (event.target.checked)\r\n            this.showConfig(config);\r\n    }\r\n\r\n    saveSuite(suiteName:string){    \r\n        let configs:string[] = [];\r\n        \r\n        this.configs.forEach(c => {\r\n            let isChecked = this.configsSelections.get(c.toLocaleLowerCase());\r\n            if (isChecked)\r\n                configs.push(c);\r\n        })\r\n\r\n        let strConfigs = '';\r\n        for (let i=0;i<configs.length;i++){\r\n            if (strConfigs.length > 0)\r\n                strConfigs += \",\"\r\n            strConfigs += configs[i]\r\n        }\r\n\r\n        this.http.post<any>('/new_report/save_suite',{\r\n            'suite':suiteName,\r\n            'configurations':strConfigs\r\n        }).subscribe(res => {\r\n            \r\n            this.initSuitesList(res)\r\n            this.selectedSuite = suiteName\r\n        })\r\n    }\r\n\r\n    getSelectedSuiteName(){\r\n        return this.selectedSuite;\r\n    }\r\n\r\n    openSaveSuiteDialog(){\r\n        this.modalService.open(SaveSuiteDialogComponent,{ centered: true }).result.then(res => {\r\n        });    \r\n      }\r\n    \r\n    closeSaveSuiteDialog(){\r\n        this.modalService.dismissAll();\r\n    }\r\n      \r\n    clearConfigViewer(){\r\n        this.selectedPredictionReadingFunction = '';\r\n        this.selectedGTReadingFunction = '';\r\n        this.selectedTransformFunction = '';\r\n        this.selectedPartitioningFunction = '';\r\n        this.selectedStatisticsFunction = '';\r\n        this.selectedConfusionFunction = '';    \r\n        this.selectedAssociationFunction = '';\r\n\r\n        this.configName = '';\r\n        this.logsFilter = UDFConstants.DEFAULT_LOG_FILTER;\r\n\r\n        //clear param values\r\n        this.udf.forEach((value, key) => {\r\n            value.forEach(item => {\r\n                item.params.forEach(p => {\r\n                    p.value = '';\r\n                })\r\n            });\r\n        })\r\n\r\n    }  \r\n\r\n    parseGetConfigResult(udfType:UDFTypeEnum,result:any){\r\n        \r\n        if (result[udfType] != undefined){\r\n            let func = result[udfType].func_name;\r\n            if (udfType == UDFTypeEnum.READING_FUNCTIONS)\r\n                this.selectedPredictionReadingFunction = func;\r\n            if (udfType == UDFTypeEnum.ASSOCIATION_FUNCTIONS)\r\n                this.selectedAssociationFunction = func;\r\n            if (udfType == UDFTypeEnum.CONFUSION_FUNCTIONS)\r\n                this.selectedConfusionFunction = func;\r\n            if (udfType == UDFTypeEnum.GT_READING_FUNCTIONS)\r\n                this.selectedGTReadingFunction = func;\r\n            if (udfType == UDFTypeEnum.STATISTICS_FUNCTIONS)\r\n                this.selectedStatisticsFunction = func;\r\n            if (udfType == UDFTypeEnum.TRANSFORM_FUNCTIONS)\r\n                this.selectedTransformFunction = func;\r\n            if (udfType == UDFTypeEnum.PARTITIONING_FUNCTIONS)\r\n                this.selectedPartitioningFunction = func;    \r\n\r\n            let args = result[udfType].params;\r\n            let udfItem = this.udf.get(udfType)?.find(x => x.funcName == func);\r\n            if (udfItem != undefined){\r\n                udfItem.params.forEach(p => {\r\n                    p.value = args[p.name];\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    showConfig(configName:string){\r\n        this.showParams = false;\r\n        this.showConfigViewer = true;    \r\n        //get the confing from server\r\n        let params = { 'config':configName };\r\n        let url = '/new_report/get_configuration';\r\n        this.http.get<any>(url,{params}).subscribe(config => {\r\n            //clear the config viewer  \r\n            \r\n            this.clearConfigViewer();\r\n            //show the new config in the viewer\r\n\r\n            this.parseGetConfigResult(UDFTypeEnum.ASSOCIATION_FUNCTIONS,config);\r\n            this.parseGetConfigResult(UDFTypeEnum.CONFUSION_FUNCTIONS,config);\r\n            this.parseGetConfigResult(UDFTypeEnum.GT_READING_FUNCTIONS,config);\r\n            this.parseGetConfigResult(UDFTypeEnum.PARTITIONING_FUNCTIONS,config);\r\n            this.parseGetConfigResult(UDFTypeEnum.READING_FUNCTIONS,config);\r\n            this.parseGetConfigResult(UDFTypeEnum.STATISTICS_FUNCTIONS,config);\r\n            this.parseGetConfigResult(UDFTypeEnum.TRANSFORM_FUNCTIONS,config);\r\n                    \r\n            this.configName = configName;\r\n            this.logsFilter = config[UDFTypeEnum.LOGS_NAME_TO_EVALUATE];\r\n            this.evaluate_folders = config[UDFTypeEnum.EVALUATE_FOLDERS];\r\n\r\n            this.gtReadingSameAsPrediction = (this.selectedGTReadingFunction == undefined || this.selectedGTReadingFunction == null || this.selectedGTReadingFunction == '') || (this.selectedGTReadingFunction.toLowerCase() == 'none');\r\n            this.transformEnabled = this.selectedTransformFunction != '' && this.selectedTransformFunction != undefined;\r\n            this.partitioningEnabled = this.selectedPartitioningFunction != '' && this.selectedPartitioningFunction != undefined;\r\n            this.associationEnabled = this.selectedAssociationFunction != '' && this.selectedAssociationFunction != undefined;\r\n\r\n            this.isPanelOpen = false;\r\n        })\r\n    }\r\n\r\n    addUdfToConfig(type:UDFTypeEnum,selectedFunc:string,dictionary:{ [key: string]: any }){\r\n        let item = this.udf.get(type);\r\n        let x = item?.find(x => x.funcName == selectedFunc);\r\n        const paramsObj: { [key: string]: any } = {};\r\n        if (x == undefined)\r\n            return\r\n        for(let i = 0;i<x!.params.length;i++){\r\n            let param = x!.params[i];\r\n            paramsObj[param.name] = param.value;\r\n        }\r\n\r\n        dictionary[type] = {\r\n\r\n            'func_name':selectedFunc,\r\n            'params':paramsObj\r\n        }\r\n    }\r\n\r\n    saveConfig(){\r\n        this.isBusy = true;\r\n        this.showParams = false\r\n        this.newReportResult = new NewReportResult();\r\n        const dictionary: { [key: string]: any } = {};\r\n        this.addUdfToConfig(UDFTypeEnum.READING_FUNCTIONS,this.selectedPredictionReadingFunction,dictionary);\r\n        if (!this.gtReadingSameAsPrediction && this.selectedGTReadingFunction.toLocaleLowerCase() != 'none')\r\n            this.addUdfToConfig(UDFTypeEnum.GT_READING_FUNCTIONS,this.selectedGTReadingFunction,dictionary);\r\n        if (this.transformEnabled)\r\n            this.addUdfToConfig(UDFTypeEnum.TRANSFORM_FUNCTIONS,this.selectedTransformFunction,dictionary);\r\n        if (this.partitioningEnabled)\r\n            this.addUdfToConfig(UDFTypeEnum.PARTITIONING_FUNCTIONS,this.selectedPartitioningFunction,dictionary);\r\n        this.addUdfToConfig(UDFTypeEnum.STATISTICS_FUNCTIONS,this.selectedStatisticsFunction,dictionary);\r\n        this.addUdfToConfig(UDFTypeEnum.CONFUSION_FUNCTIONS,this.selectedConfusionFunction,dictionary);\r\n        if (this.associationEnabled)\r\n            this.addUdfToConfig(UDFTypeEnum.ASSOCIATION_FUNCTIONS,this.selectedAssociationFunction,dictionary);\r\n\r\n        dictionary[UDFTypeEnum.CONFIG_NAME] = this.configName;\r\n        dictionary[UDFTypeEnum.LOGS_NAME_TO_EVALUATE] = this.logsFilter;\r\n        dictionary[UDFTypeEnum.EVALUATE_FOLDERS] = this.evaluate_folders;\r\n\r\n        const url = '/new_report/save_configuration'; \r\n\r\n        this.http.post(url, dictionary).subscribe(response => {\r\n            this.isBusy = false;\r\n            let configs:any;\r\n            configs = response;\r\n            this.configs = configs;\r\n            this.configs.sort((a,b) =>  (a > b ? 1 : -1));\r\n\r\n            Swal.fire({\r\n                text: 'Configuration saved successfully',\r\n                timer:3000,\r\n                showConfirmButton:false,\r\n                showCancelButton:false,\r\n                backdrop:false,\r\n                color:'white',\r\n                position:'bottom',\r\n                background:'#00CC00',\r\n              });\r\n            })\r\n    }\r\n\r\n\r\n    createReport(){\r\n        this.isBusy = true;\r\n        this.newReportResult = new NewReportResult();\r\n        this.newReportResult.link = '';\r\n        \r\n        this.newReportResult.errorMessage = '';\r\n        this.newReportResult.ok = false;\r\n\r\n\r\n        let params = { \r\n            'configurations':this.getSuiteConfigurations(this.selectedSuite),\r\n            'suite_Name':this.selectedSuite == SELECTE_SUITE ? '' : this.selectedSuite,\r\n            'predictions_directory': this.predictionsDirectory,\r\n            'groundtruth_directory': this.groundTruthDirectory,\r\n            'reporter_output_directory':this.reporterOutputDirectory\r\n        };\r\n\r\n        let url = '/new_report/calculating_page';\r\n        this.http.get<any>(url,{params}).subscribe(res => {\r\n            \r\n            this.isBusy = false;\r\n            this.newReportResult.ok = res.ok;\r\n            if (res.link != 'None' && res.link != undefined && res.link != null)\r\n                this.newReportResult.link = res.link;\r\n            else\r\n                this.newReportResult.link = '';\r\n            this.newReportResult.errorMessage = res.errorMessage;\r\n            this.newReportResult.files = res.files;\r\n            this.newReportResult.failed_with_error = res.failed_with_error;\r\n            this.newReportResult.not_json_files= res.not_json_files;\r\n            this.newReportResult.num_success_files = res.num_success_files;\r\n            this.newReportResult.reading_function_skipped = res.reading_function_skipped;\r\n            this.newReportResult.skipped_not_in_lognames = res.skipped_not_in_lognames;\r\n        })\r\n    }\r\n\r\n    getSuiteConfigurations(suiteName:string){\r\n        let configs:string[] = [];\r\n        for (let [key,value] of this.configsSelections){\r\n            if (value){\r\n                configs.push(key)\r\n            }\r\n        }\r\n\r\n        return configs.join(\",\");\r\n    }\r\n\r\n    showResults(){\r\n        if (this.newReportResult.ok && this.newReportResult.files.length > 0)\r\n            return true;\r\n        if (!this.newReportResult.ok && this.newReportResult.errorMessage != '')\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    getNumConfigsSelected(){\r\n        //this.configsSelections\r\n        let count = 0;\r\n        for (const isSelected of this.configsSelections.values()) {\r\n            if (isSelected) {\r\n            count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    getUDFUserArguments(funcType:string,funcName:string){\r\n        let params = { 'func_type':funcType,'func_name':funcName };\r\n        let url = '/new_report/get_udf_user_arguments';\r\n\r\n        this.http.get<any>(url,{params}).subscribe(config => {\r\n            this.udfArgumentsMap[funcType + \"-\" + funcName] = config;       \r\n            console.log('map',JSON.stringify(this.udfArgumentsMap))        \r\n        });\r\n    }\r\n\r\n    showArgumentsPanel(funcType:string,title:string,funcName:string){\r\n        let o = this.udf.get(funcType)?.find(x => x.funcName == funcName)\r\n        if (o != undefined){\r\n            this.showArgumentsEvent.next({'funcType':funcType,'funcName':funcName,'udfItem':o,'title':title});\r\n        }\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { SaveTemplateDialogComponent } from '../save-template-dialog/save-template-dialog.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport enum States {\r\n  Close,\r\n  Opened,\r\n  Open,\r\n}\r\n\r\nexport class SegmentationItem {\r\n  name = '';\r\n  columns:string[] = [];\r\n  rows:string[] = [];\r\n  openHorizontalSegmentation  = States.Close;\r\n  openVerticalSegmentation    = States.Close;\r\n  viewguid = StatisticsToolService.generateGUID();\r\n}\r\n\r\nexport class TemplateInfo {\r\n  //wasChanged = false;\r\n  Segmentations:SegmentationItem[] = [];\r\n  SegmentationsClicked:boolean[] = [];\r\n  name = '';\r\n}\r\n\r\ninterface ISegmentation {\r\n  columns:string;\r\n  name:string;\r\n  rows:string;\r\n}\r\ninterface IContent {\r\n  segmentations:ISegmentation[];\r\n}\r\n\r\nexport class SaveTemplate_SegmentItem{\r\n  name = '';\r\n  rows = '';\r\n  columns = '';\r\n}\r\nexport class SaveTemplateRequest {\r\n  name = '';\r\n  segmentations:SaveTemplate_SegmentItem [] = [];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatisticsToolService implements OnInit {\r\n\r\n  optionalSegmentations = new Map<string,string[]>();\r\n  segmentationsFetched = new Subject<number>();\r\n  openDrawer = new Subject<string>();\r\n  uniqueValueChanged = new Subject<boolean>();\r\n  viewHeights = new Map<number,string>();\r\n  reportSelected = new Subject();\r\n    \r\n  templates:TemplateInfo[] = [];\r\n  currentTemplate:TemplateInfo = new TemplateInfo();\r\n  calculateUnique = false;\r\n  fileNotFoundError = '';\r\n\r\n  templateNameOptions:{'key':number,'value':string}[] = [];\r\n  selectedTamplate = 0;\r\n  selectedReport = 0;\r\n\r\n  showDrawer = false;\r\n\r\n  drawerUpdateListUrl = '';\r\n  drawerShowImageUrl = '';\r\n\r\n  activeLocalDataStore = false;\r\n  localDataStorePath = '';\r\n\r\n  mainRefPairs:   {'main':string,'ref':string}[] = [];\r\n  reportlistItems:{'key':number,'value':string}[] = []\r\n\r\n  \r\n  constructor(private httpClient:HttpClient,private modalService: NgbModal) { \r\n  }\r\n  \r\n  init(reportsPairs:string = '',selectedReport:number = 0){\r\n    if (reportsPairs != '')\r\n      this.processReportsPairs(reportsPairs);\r\n    this.templates = [];\r\n    this.currentTemplate = new TemplateInfo();\r\n    this.templateNameOptions = [];\r\n    this.selectedTamplate = 0;\r\n    \r\n    let main  = this.reportlistItems.find(x => x.key == selectedReport)!;\r\n    let ref   = this.mainRefPairs.find(x => x.main == main.value);\r\n\r\n    let url = '/viewer/get_all_templates';\r\n    this.httpClient.post<{'content':IContent,'name':string}[]>\r\n      (url,{\r\n        'main_path':main.value,\r\n        'ref_path': ref!.ref,\r\n      })\r\n      .subscribe(res => {\r\n        this.processTemplates(res);\r\n\r\n        this.updateTemplateNames();       \r\n\r\n        this.loadSegmentations(selectedReport);\r\n      })\r\n\r\n      this.readLocalDataStoreInfoFromStorage();\r\n  }\r\n  \r\n\r\n  processReportsPairs(reportPairs:string){\r\n    if (reportPairs == '')\r\n      return;\r\n    \r\n      this.mainRefPairs = JSON.parse(reportPairs);\r\n      this.reportlistItems = [];\r\n      let index = 0;\r\n      this.mainRefPairs.forEach(pair => {\r\n        this.reportlistItems.push({'key':index,'value':pair.main})\r\n        index++;\r\n      })\r\n  }\r\n\r\n  getReportDesc(reportfileName:string){\r\n    let parts = reportfileName.split(/[\\\\/]/);\r\n    let dir = parts[parts.length-2];\r\n    let file = parts[parts.length-1];\r\n    return dir + \"/\" + file;\r\n  }\r\n\r\n  loadSegmentations(selectedReport:number = 0){\r\n    //get all optional segments\r\n    let main = this.reportlistItems.find(x => x.key == selectedReport)!;\r\n\r\n    this.optionalSegmentations = new Map<string,string[]>();\r\n    this.httpClient.post<{'name':string,'values':string[]}[]>\r\n      ('/viewer/get_segmentations',\r\n        {\r\n          'main_path': main.value\r\n        }\r\n      )\r\n      .subscribe(res => {\r\n         res.forEach(x => {\r\n          this.optionalSegmentations.set(x.name,x.values);\r\n         })\r\n         this.segmentationsFetched.next(selectedReport);\r\n      }\r\n    )\r\n  }\r\n\r\n  processTemplates(items:{'content':IContent,'name':string}[]){\r\n    \r\n    this.addDefaultTemplate();\r\n    items.forEach(x => {\r\n      let c:IContent = JSON.parse(JSON.stringify(x.content));\r\n      let t = new TemplateInfo();\r\n      t.name = x.name;\r\n      c.segmentations.forEach(s => {\r\n        let seg = new SegmentationItem();\r\n        seg.columns = s.columns.split(',');\r\n        seg.rows = s.rows.split(',');\r\n        seg.name = s.name;\r\n        t.Segmentations.push(seg);\r\n        t.SegmentationsClicked.push(true)\r\n      })  \r\n      this.templates.push(t) ;\r\n    })\r\n  }\r\n\r\n  updateTemplateNames(){\r\n    this.templateNameOptions = [];\r\n    for(let i = 0;i< this.templates.length;i++){\r\n      if (this.templates[i].name != '')\r\n        this.templateNameOptions.push({'key':(i),'value':this.templates[i].name});\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n  onTemplateSelected(templateName:string){\r\n    this.currentTemplate = this.templates.find(x => x.name == templateName)!;\r\n    let find = this.templateNameOptions.find(x => x.value == templateName);\r\n    this.selectedTamplate = find!.key;\r\n  }\r\n\r\n  updateSegments(id:number,templateName:string,csvColumns:string,csvRows:string){\r\n    let cols = csvColumns.split(\",\");\r\n    let rows = csvRows.split(\",\");\r\n    this.currentTemplate.Segmentations[id].columns = cols;\r\n    this.currentTemplate.Segmentations[id].rows = rows;\r\n  }\r\n\r\n  updateSegmentationName(templateName:string,id:number,segName:string){\r\n    this.currentTemplate.Segmentations[id].name = segName;\r\n  }\r\n  \r\n  addDefaultTemplate(){\r\n    let t = this.templates.find(x => x.name == \"\")\r\n    if (t == undefined){\r\n      t = new TemplateInfo();\r\n    }\r\n    t.name = \"Default (Total)\";\r\n    let s = new SegmentationItem();\r\n    s.name = 'Total';\r\n    s.columns = [];\r\n    s.rows = [];\r\n    t.Segmentations.push(s);\r\n    t.SegmentationsClicked.push(true);\r\n    this.templates.push(t);\r\n    this.currentTemplate = t;\r\n  }\r\n\r\n  addSegmentations(){\r\n    //this.currentTemplate.wasChanged = true;\r\n    this.currentTemplate.Segmentations.push(new SegmentationItem());\r\n    this.currentTemplate.SegmentationsClicked.push(true);\r\n  }\r\n\r\n  saveTemplate(templateName:string){\r\n\r\n    let req = new SaveTemplateRequest();\r\n    req.name = templateName;\r\n    this.currentTemplate.Segmentations.forEach(s => {\r\n      let seg = new SaveTemplate_SegmentItem();\r\n      seg.columns = s.columns.join(\",\");\r\n      seg.rows = s.rows.join(\",\");\r\n      seg.name = s.name;\r\n      req.segmentations.push(seg);\r\n    })\r\n    \r\n    this.httpClient.post<any>('/viewer/save_template',{\r\n      'name':templateName,\r\n      'content':JSON.stringify(req),\r\n      'main_path': this.getSelectedMainReport(),\r\n      'ref_path': this.getSelectedRefReport(),\r\n    }).subscribe(res => {\r\n\r\n      this.templates = [];\r\n      this.processTemplates(res);\r\n      this.updateTemplateNames();       \r\n      this.onTemplateSelected(templateName);\r\n      \r\n    })\r\n  }\r\n\r\n  removeView(viewGuid:string) {\r\n    \r\n    let segments:SegmentationItem[] = [];\r\n    for(let i = 0; i< this.currentTemplate.Segmentations.length;i++){\r\n      let item = this.currentTemplate.Segmentations[i];\r\n      if (item.viewguid != viewGuid){\r\n        segments.push(item);\r\n      } \r\n    }\r\n    \r\n    this.currentTemplate.Segmentations = segments;\r\n  }\r\n\r\n  getDrawerUpdateListUrl(){\r\n    return this.drawerUpdateListUrl;\r\n  }\r\n\r\n  getDrawerShowImageUrl(){\r\n    return this.drawerShowImageUrl;\r\n  }\r\n\r\n  readLocalDataStoreInfoFromStorage(){\r\n    this.localDataStorePath = localStorage.getItem('LOCAL_DATA_STORE')!;\r\n    this.activeLocalDataStore = localStorage.getItem('ACTIVATE_LOCAL_DATA_STORE')! == \"true\" ? true : false;\r\n  }\r\n\r\n  saveLocalDataStoreInfoInStorage(){\r\n    localStorage.setItem('LOCAL_DATA_STORE',this.localDataStorePath);\r\n    localStorage.setItem('ACTIVATE_LOCAL_DATA_STORE',this.activeLocalDataStore ? 'true' : 'false');\r\n  }\r\n\r\n  showFileNotFoundError(){\r\n    return this.fileNotFoundError.length > 0;\r\n  }\r\n\r\n  getSelectedMainReport(){\r\n    let main = this.reportlistItems[this.selectedReport];\r\n    return main.value;\r\n  }\r\n\r\n  getSelectedRefReport(){\r\n    let main = this.reportlistItems[this.selectedReport];\r\n    let ref = this.mainRefPairs.find(x => x.main == main.value);\r\n    if (ref != undefined)\r\n      return ref.ref;\r\n    return '';\r\n  }\r\n \r\n\r\n  openSaveTemplateDialog(){\r\n    this.modalService.open(SaveTemplateDialogComponent,{ centered: true }).result.then(res => {\r\n    });    \r\n  }\r\n\r\n  closeSaveTempalteDialog(){\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  getSelectedTemplateName(){\r\n    return this.templateNameOptions[this.selectedTamplate].value;\r\n  }\r\n\r\n  getView(guid:string){\r\n    for(let i=0;i<this.currentTemplate.Segmentations.length;i++){\r\n      let v = this.currentTemplate.Segmentations[i];\r\n      if (v.viewguid == guid)\r\n        return v;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  getDropdownState(viewGuid:string,segmentName:string){\r\n    let view = this.getView(viewGuid);\r\n    if (view == null)\r\n      return null;\r\n    if (segmentName == \"Horizontal Segmentation\"){\r\n      return view.openHorizontalSegmentation;\r\n    } else {\r\n      return view.openVerticalSegmentation;\r\n    }\r\n  }\r\n\r\n  setDropdownState(viewGuid:string,segmentName:string,state:States){\r\n    let view = this.getView(viewGuid);\r\n    if (view == null)\r\n      return;\r\n\r\n    if (segmentName == \"Horizontal Segmentation\"){\r\n      view.openHorizontalSegmentation = state;\r\n    } else {\r\n      view.openVerticalSegmentation = state;\r\n    }\r\n  }\r\n\r\n  static generateGUID(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      const r = Math.random() * 16 | 0;\r\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ApplicationRef, Component, ElementRef, OnInit } from '@angular/core';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\nimport {Location} from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'template-segmentations',\r\n  templateUrl: './template-segmentations.component.html',\r\n  styleUrls: ['./template-segmentations.component.css']\r\n})\r\nexport class TemplateSegmentationsComponent implements OnInit {\r\n  \r\n  isNewTemplateMode = true;\r\n  templateNameCreated = '';\r\n  backImgSrc = 'assets/back-icon-blue.svg';\r\n  saveImgSrc = 'assets/save-icon-blue.svg';\r\n  addGridImgSrc = 'assets/grid-add-blue.svg';\r\n\r\n  subscribeSegmentsReady = new Subscription;\r\n\r\n  constructor(\r\n              public statService:StatisticsToolService,\r\n              private location:Location) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.subscribeSegmentsReady = this.statService.segmentationsFetched.subscribe(selectedReport => {\r\n      this.statService.addDefaultTemplate();\r\n      this.statService.selectedReport = selectedReport;\r\n      this.statService.reportSelected.next(true);\r\n    })\r\n  } \r\n\r\n  ngOnDestroy(){\r\n    if (this.subscribeSegmentsReady != null)\r\n      this.subscribeSegmentsReady.unsubscribe();\r\n  }\r\n\r\n  getViewHeight(index:number){\r\n    \r\n    var isViewPanelOpen = this.statService.currentTemplate.SegmentationsClicked[index];\r\n\r\n    if (isViewPanelOpen)\r\n      return this.statService.viewHeights.get(index);\r\n    else\r\n      return '0px';  \r\n  }\r\n\r\n  onTemplateSelected(event:any){\r\n    let tempalteId = event.target.value;\r\n    \r\n    this.isNewTemplateMode = false;\r\n    this.templateNameCreated = '';\r\n    let t = this.statService.templateNameOptions.find(x => x.key == +tempalteId);\r\n    if (t != undefined){\r\n      this.statService.onTemplateSelected(t.value);\r\n    }\r\n  }\r\n\r\n  onReportSelected(event:any){\r\n    this.statService.init('',event.target.value);\r\n  }\r\n\r\n  getTemplateName(){\r\n    if (!this.isNewTemplateMode && this.statService.selectedTamplate > 0){\r\n      return this.statService.templateNameOptions.find(x => x.key == this.statService.selectedTamplate)!.value;\r\n    }\r\n\r\n    if (this.isNewTemplateMode && this.templateNameCreated.length > 0){\r\n      return this.templateNameCreated;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getTemplateNameForTitle(){\r\n    \r\n    let t = this.getTemplateName();\r\n    if (t.length > 0){\r\n      return \" - \" + t.toLocaleUpperCase();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  addView(){\r\n    this.statService.addSegmentations();\r\n  }\r\n\r\n  saveTemplate(){\r\n    this.statService.openSaveTemplateDialog();\r\n  }\r\n\r\n  slideUniqueChange(event:any){\r\n    this.statService.uniqueValueChanged.next(this.statService.calculateUnique);\r\n  }\r\n\r\n  slideLocalDataStore(event:any){\r\n    this.statService.saveLocalDataStoreInfoInStorage();      \r\n  }\r\n\r\n  clickPanel(i:number){\r\n    for(let x=0;x < this.statService.currentTemplate.SegmentationsClicked.length;x++){\r\n      if (x == i){\r\n        this.statService.currentTemplate.SegmentationsClicked[x] = !this.statService.currentTemplate.SegmentationsClicked[x];\r\n       }\r\n      }\r\n    }\r\n\r\n    getActiveCls(i:number) {\r\n      if (this.statService.currentTemplate.SegmentationsClicked[i] == true){\r\n        return 'active';\r\n      }\r\n      else\r\n        return ''; \r\n    }\r\n\r\n    agentHas(keyword:string) {\r\n      return navigator.userAgent.toLowerCase().search(keyword.toLowerCase()) > -1;\r\n    }\r\n\r\n    isFireFox(){\r\n      return this.agentHas(\"Firefox\") || this.agentHas(\"FxiOS\") || this.agentHas(\"Focus\");\r\n    }\r\n\r\n    getTitle(i:number){\r\n      return this.statService.currentTemplate.Segmentations[i].name;\r\n    }\r\n\r\n    back(){\r\n      let path = this.location.path();\r\n      console.log('path',path)\r\n      if (path.indexOf('/static/') > 0){\r\n        path = path.replace('/static/','/');\r\n        console.log('path-remove-static',path)\r\n      }\r\n      window.location.href = 'http://127.0.0.1:5000/';\r\n    }\r\n\r\n    localDataStoreChange(event:any){\r\n      this.statService.saveLocalDataStoreInfoInStorage();\r\n    }\r\n\r\n    getLocalDataStoreCls(){\r\n      if (this.statService.activeLocalDataStore){\r\n        return '';\r\n      } else {\r\n        return 'disableLocalDataStore';\r\n      }\r\n    }\r\n\r\n    getSelectedMainReportTooltip(){\r\n      if (this.statService.reportlistItems && this.statService.selectedReport in this.statService.reportlistItems)\r\n        return this.statService.reportlistItems[this.statService.selectedReport].value;\r\n      else\r\n        return ''\r\n    }\r\n\r\n    getSelectedTemplateTooltip(){\r\n      if (this.statService.templateNameOptions && this.statService.selectedTamplate in this.statService.templateNameOptions)\r\n        return this.statService.templateNameOptions[this.statService.selectedTamplate].value;\r\n      else\r\n        return ''\r\n    }\r\n\r\n    disableUnique(){\r\n      if (this.statService.getSelectedRefReport() == '')\r\n        return true;\r\n      return false;\r\n    }\r\n }\r\n","<div>\r\n    <div style=\"width:100%;\r\n                height:50px;\r\n                border:1px solid lightgray;\r\n                border-radius: 4px;\r\n                color:#182a69;\r\n                background-color: #E4F0F5;\r\n                position: sticky;\r\n                z-index: 99999;\r\n                top:0px\">\r\n\r\n        <div class=\"template-selection\" style=\"margin-left: 10px;padding-top: 8px;\">\r\n            <div style=\"display: flex;width:100%;height: 40px;\">\r\n                <div class=\"back-icon\" style=\"margin-top:-2px;width:40px\">\r\n                    <img [src]=\"backImgSrc\"\r\n                        (mouseover)=\"backImgSrc = 'assets/back-icon-orange.svg'\"\r\n                        (mouseout)=\"backImgSrc = 'assets/back-icon-blue.svg'\"\r\n                        style=\"width: 33px;height:33px;margin-top: 3px;cursor: pointer;\" \r\n                        title=\"Back\"\r\n                        class=\"back\"\r\n                        (click)=\"back()\">\r\n                </div>\r\n                <div style=\"width:10%;padding-top:2px;\" \r\n                    [ngStyle]=\"{'margin-right':isFireFox() ? '15px' : '5px'}\"\r\n                    >\r\n                    <select \r\n                        [title]=\"getSelectedMainReportTooltip()\"\r\n                        [(ngModel)]=\"statService.selectedReport\"\r\n                        style=\"height: 29px; width:100%;border-color:lightgray;border-radius: 3px;\"\r\n                        (change)=\"onReportSelected($event)\"\r\n                        >\r\n                        <option *ngFor=\"let s of statService.reportlistItems\"\r\n                                        value=\"{{s.key}}\"\r\n                                >Report - {{ statService.getReportDesc(s.value)}}</option>\r\n                    </select>\r\n                </div>\r\n                \r\n                <div class=\"pipe\"></div>\r\n                <div style=\"width:10%;padding-top:2px;margin-left: 3px;\">\r\n                    <select \r\n                        [title]=\"getSelectedTemplateTooltip()\"\r\n                        [(ngModel)]=\"statService.selectedTamplate\"\r\n                        style=\"height: 29px; width:100%;border-color:lightgray;border-radius: 3px;\"\r\n                        (change)=\"onTemplateSelected($event)\"\r\n                        >\r\n                        <option *ngFor=\"let t of statService.templateNameOptions\"\r\n                                        value=\"{{t.key}}\"\r\n                                >{{t.value}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"save-icon\" style=\"margin-top: -1px;\"\r\n                     [ngStyle]=\"{'margin-left': isFireFox() ? '22px' : '12px'}\">\r\n                    <img [src]=\"addGridImgSrc\"\r\n                        (mouseover)=\"addGridImgSrc = 'assets/grid-add-orange.svg'\"\r\n                        (mouseout)=\"addGridImgSrc = 'assets/grid-add-blue.svg'\"\r\n                        style=\"width: 40px;height:40px;margin-top: 0px;cursor: pointer;\" \r\n                        title=\"Add View\"\r\n                        (click)=\"addView()\">\r\n                </div>\r\n\r\n                \r\n                <div class=\"save-icon\" \r\n                    style=\"margin-top: -1px;\"\r\n                    [ngStyle]=\"{'margin-left': isFireFox() ? '10px' : '5px'}\">\r\n                    <img [src]=\"saveImgSrc\"\r\n                        (mouseover)=\"saveImgSrc = 'assets/save-icon-orange.svg'\"\r\n                        (mouseout)=\"saveImgSrc = 'assets/save-icon-blue.svg'\"\r\n                        style=\"width: 33px;height:33px;margin-top: 3px;cursor: pointer;\" \r\n                        title=\"Save Template\"\r\n                        (click)=\"saveTemplate()\">\r\n                </div>\r\n                \r\n                <div class=\"pipe\" style=\"margin-right:5px;margin-left: 7px;\"></div>\r\n                <div style=\"display:flex;padding-right:3px;\">\r\n                    <div style=\"margin-bottom:-10px;margin-left:3px;padding-top:10px\"\r\n                         \r\n                         >\r\n                        <label class=\"switch\">\r\n                            <input type=\"checkbox\" \r\n                                   \r\n                                   [disabled]=\"disableUnique()\" \r\n                                   [(ngModel)]=\"statService.calculateUnique\" (change)=\"slideUniqueChange($event)\">\r\n                            <span class=\"slider round\" [ngStyle]=\"{'cursor': disableUnique() ? 'none' : 'pointer'}\"></span>\r\n                        </label>\r\n                    </div>\r\n                    <div style=\"margin-left:5px;padding-top: 5px;\">\r\n                        <p style=\"font-weight: bold;\"\r\n                           [ngStyle]=\"{'color':disableUnique()? 'lightgray' : '#182a69'}\">Unique</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"pipe\"></div>\r\n                <div style=\"display:flex;margin-left: 3px;\">\r\n                    <div style=\"margin-bottom:-10px;margin-left:3px;padding-top:10px\">\r\n                        <label class=\"switch\">\r\n                            <input type=\"checkbox\" \r\n                                   [(ngModel)]=\"statService.activeLocalDataStore\" \r\n                                   (change)=\"slideLocalDataStore($event)\">\r\n                            <span class=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                    <div style=\"margin-left:5px;padding-top: 5px;\">\r\n                        <p style=\"font-weight: bold;color:#182a69;\">Local Store</p>\r\n                    </div>\r\n                    <input type=\"text\" \r\n                           [(ngModel)]=\"statService.localDataStorePath\"  \r\n                           (keyup)=\"localDataStoreChange($event)\"\r\n                           [ngClass]=\"getLocalDataStoreCls()\"\r\n                           [readonly]=\"statService.activeLocalDataStore == false\"\r\n                           style=\"height:27px;margin:5px;margin-top:3px !important;width:180px;border:1px solid lightgray;border-radius: 3px;outline: none;\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- SEGMENTATIONS -->\r\n    <div style=\"margin-top:0px\">\r\n        \r\n            <ng-container *ngFor=\"let x of statService.currentTemplate.Segmentations;let i = index\">\r\n                <button \r\n                    class=\"collapsible\" \r\n                    (click)=\"clickPanel(i)\" \r\n                    style=\"font-weight: bold;\"    \r\n                    [ngClass]=\"getActiveCls(i)\">View - {{ getTitle(i) }}\r\n                </button>\r\n                    <div class=\"content\" [ngStyle]=\"{'min-height':getViewHeight(i)}\">\r\n                        <pkl-view \r\n                            [viewguid] = \"x.viewguid\"\r\n                            [selectedRowsSet] = \"x.rows\"\r\n                            [selectedColumnsSet] = \"x.columns\"\r\n                            [name] = \"x.name\"\r\n                            [id] = i\r\n                        >\r\n                        </pkl-view>          \r\n                    </div>  \r\n            </ng-container>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'template-segments-header',\r\n  templateUrl: './template-segments-header.component.html',\r\n  styleUrls: ['./template-segments-header.component.css']\r\n})\r\nexport class TemplateSegmentsHeaderComponent implements OnInit {\r\n\r\n  constructor(public statToolService: StatisticsToolService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngDestroy(){\r\n    \r\n  }\r\n\r\n}\r\n","<div style=\"width:100%;\r\n            height:195px;\r\n            border:1px solid lightgray;\r\n            border-radius: 4px;\r\n            color:#182a69;\r\n            background-color: #fafafa;\">\r\n    \r\n    <div class=\"template-selection\" style=\"width:600px\">\r\n        <mat-grid-list cols=\"2\" rowHeight=\"40px\">\r\n\r\n        </mat-grid-list>\r\n    \r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class Utils  {\r\n\r\n    public static sleep(ms:number) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","AppComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","NavigationStart","i0","SafePipe","constructor","sanitizer","transform","url","bypassSecurityTrustResourceUrl","pure","onDocumentClick","event","commonSvc","onMouseClicked","next","onKeydownHandler","key","statToolSvc","showDrawer","SampleFunction","$event","o","data","action","console","log","openDrawer","updateListUrl","value","drawerUpdateListUrl","activeLocalDataStore","localDataStorePath","length","drawerShowImageUrl","router","newReportService","eltRef","ngOnInit","initialize","events","subscribe","reports","URLSearchParams","window","location","search","get","isNewReport","reportsPairs","toString","init","selectors","hostBindings","ctx","FormsModule","ReactiveFormsModule","MatSelectModule","MatGridListModule","MatRadioModule","MatButtonModule","MatProgressSpinnerModule","BrowserModule","HttpClientModule","SegmentationsComponent","PklViewComponent","StatisticsToolService","NgMultiSelectDropDownModule","TemplateSegmentationsComponent","TemplateSegmentsHeaderComponent","MatSlideToggleModule","MatIconModule","MatSidenavModule","MatToolbarModule","DragDropModule","DrawerComponent","DrawerContentComponent","MatExpansionModule","NgbModule","NgbTypeaheadModule","NgbAlertModule","SaveTemplateDialogComponent","NewReportComponent","SaveSuiteDialogComponent","ConfigurationViewerComponent","NewReportResultComponent","ClickOutsideDirective","CommonService","UdfArgumentsComponent","BrowserAnimationsModule","AppModule","bootstrap","declarations","States","elementRef","renderer","statSvc","name","nativeElement","parentNode","attributes","dropdownPanel","querySelector","getDropdownState","viewguid","Opened","setDropdownState","Open","hidden","inputs","viewId","segmentName","UDFTitleEnum","UDFTypeEnum","UDFConstants","togglePanel","isPanelOpen","close","showConfigViewer","disableSaveButton","configName","selectedPredictionReadingFunction","gtReadingSameAsPrediction","selectedGTReadingFunction","transformEnabled","selectedTransformFunction","selectedStatisticsFunction","partitioningEnabled","selectedPartitioningFunction","selectedConfusionFunction","getTitle","onPredictionReadingFunctionChange","showParams","functionHasArguments","READING_FUNCTIONS","selectedValue","target","getUDFUserArguments","showArgumentsPanel","readingFunctionImgElement","PREDICTION_READING_FUNCTION","onGTReadingFunctionChange","GT_READING_FUNCTIONS","gtReadingFunctionImgElement","udfTitles","GT_READING_FUNCTION","onAssociationFunctionChange","ASSOCIATION_FUNCTIONS","selectedAssociationFunction","ASSOCIATION_FUNCTION","onStatisticsFunctionChange","udfTypes","STATISTICS_FUNCTIONS","statisticsFunctionImgElement","STATISTICS_FUNCTION","onConfusionFunctionChange","CONFUSION_FUNCTIONS","confusionFunctionImgElement","CONFUSION_FUNCTION","onTransformFunctionChange","TRANSFORM_FUNCTIONS","transformFunctionImgElement","TRANSFORM_FUNCTION","onPartitioningFunctionChange","PARTITIONING_FUNCTIONS","partitioningFunctionImgElement","PARTITIONING_FUNCTION","getArgumentSVGType","funcType","selectedFunction","isEnabled","ARGUMENT_GRAY_ICON","paramsHaveValue","ARGUMENT_GREEN_ICON","ARGUMENT_RED_ICON","getArgumentSvg","associationEnabled","elm","title","funcName","forceShow","img","imgRect","getBoundingClientRect","argPanelTop","top","argPanelLeft","right","scrollX","functionOpenedArguments","enableArgumentsButton","x","udf","find","undefined","params","b","forEach","p","checkboxChanged","logsFolderRadioChanged","processLogsFolder","logsFilter","DEFAULT_LOG_FILTER","DEFAULT_FOLDER_FILTER","gtReadingRadioChanged","sameAsPredicted","funcs","f","viewQuery","Subscription","newReportSvc","subscribeOpenArgs","showArgumentsEvent","func_name","udfItem","ngOnDestroy","unsubscribe","left","show","decls","vars","consts","template","closeDrawer","statToolService","animate","state","style","transition","trigger","changeState","subscribeOpenDrawer","msg","clickDrawer","width","SELECTE_SUITE","debounceTime","distinctUntilChanged","map","result","toUpperCase","text$","pipe","term","last_prediction_directory","slice","filter","v","toLowerCase","indexOf","last_ground_truth_directory","last_output_directory","onFocus","e","stopPropagation","setTimeout","inputEvent","Event","dispatchEvent","back","replace","href","isSelectSuiteValid","selectedSuite","disableCreateReportButton","predictionsDirectory","reporterOutputDirectory","getNumConfigsSelected","Utils","selectedRowsSet","rows","tmp","keys","Array","from","optionalSegmentations","r","isExist","push","selectedRows","join","selectedColumnsSet","cols","c","selectedColumns","calculateUnique","getSelectedMainReport","getSelectedRefReport","setUrl","fixSelectedString","loadCounter","subscribeUniqueChange","uniqueValueChanged","res","subscribeReportChanged","reportSelected","onColumnAdded","item","item_id","updateSegments","id","onAllColumnsAdded","items","onColumnRemoved","columns","split","item_text","onAllColumnsRemoved","onRowAdded","onAllRowsAdded","onRowRemoved","onAllRowsRemoved","onIframeLoad","iframe","loop","sleep","h","contentWindow","document","body","scrollHeight","height","viewHeights","set","onViewNameChanged","updateSegmentationName","removeView","getSelectedSuiteName","suiteName","closeSaveSuiteDialog","save","saveSuite","statService","getSelectedTemplateName","templateName","closeSaveTempalteDialog","saveTemplate","EventEmitter","toggleDropdown","isDropdownOpen","selectItems","arr","selected","a","httpClient","dropdownList","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","onItemSelect","segmentAdded","emit","onSelectAll","allSegmentsAdded","onUnSelect","segmentRemoved","onUnSelectAll","allSegmentsRemoved","onClick","dropdown","parentElement","querySelectorAll","Close","subscribeSegmentationsFetched","Subject","factory","providedIn","Swal","NONE_GT_READING_CUNCTION","NewReportResult","UDF","ParamType","Param","type","STRING","Item","NewReportService","http","modalService","Map","isBusy","initUserDefinedFunction","initSuitsAndConfigs","response","toPromise","configs","suites","parseConfigs","initSuitesList","initSelectedConfigs","processUdfResponse","prediction_reading_functions","sort","gt_reading_functions","partitioning_functions","statistics_functions","transform_functions","confusion_functions","association_functions","error","udfResponse","Object","values","processUdfItem","readingFunc","gt","JSON","parse","stringify","arrFuncs","functions","func","funcArguments","hasOwnProperty","argumentName","argumentValue","configsSelections","clear","toLocaleLowerCase","s","onSuiteSelected","suite","config","isConfigSelected","configSelectionChanged","checked","showConfig","isChecked","strConfigs","i","post","openSaveSuiteDialog","open","centered","then","dismissAll","clearConfigViewer","parseGetConfigResult","udfType","args","LOGS_NAME_TO_EVALUATE","evaluate_folders","EVALUATE_FOLDERS","addUdfToConfig","selectedFunc","dictionary","paramsObj","param","saveConfig","newReportResult","CONFIG_NAME","fire","text","timer","showConfirmButton","showCancelButton","backdrop","color","position","background","createReport","link","errorMessage","ok","getSuiteConfigurations","groundTruthDirectory","files","failed_with_error","not_json_files","num_success_files","reading_function_skipped","skipped_not_in_lognames","showResults","count","isSelected","udfArgumentsMap","SegmentationItem","generateGUID","TemplateInfo","SaveTemplate_SegmentItem","SaveTemplateRequest","selectedReport","processReportsPairs","templates","currentTemplate","templateNameOptions","selectedTamplate","main","reportlistItems","ref","mainRefPairs","processTemplates","updateTemplateNames","loadSegmentations","readLocalDataStoreInfoFromStorage","reportPairs","index","pair","getReportDesc","reportfileName","parts","dir","file","segmentationsFetched","addDefaultTemplate","content","t","segmentations","seg","Segmentations","SegmentationsClicked","onTemplateSelected","csvColumns","csvRows","segName","addSegmentations","req","viewGuid","segments","getDrawerUpdateListUrl","getDrawerShowImageUrl","localStorage","getItem","saveLocalDataStoreInfoInStorage","setItem","showFileNotFoundError","fileNotFoundError","openSaveTemplateDialog","getView","guid","view","openHorizontalSegmentation","openVerticalSegmentation","Math","random","subscribeSegmentsReady","getViewHeight","isViewPanelOpen","tempalteId","isNewTemplateMode","templateNameCreated","onReportSelected","getTemplateName","getTemplateNameForTitle","toLocaleUpperCase","addView","slideUniqueChange","slideLocalDataStore","clickPanel","getActiveCls","agentHas","keyword","navigator","userAgent","isFireFox","localDataStoreChange","getLocalDataStoreCls","getSelectedMainReportTooltip","getSelectedTemplateTooltip","disableUnique","ngDestroy","ms","Promise","resolve","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}