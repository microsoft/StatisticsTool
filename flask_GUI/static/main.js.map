{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/drawer-content/drawer-content.component.ts","./src/app/drawer-content/drawer-content.component.html","./src/app/drawer/drawer.component.ts","./src/app/drawer/drawer.component.html","./src/app/pkl-view/pkl-view.component.ts","./src/app/pkl-view/pkl-view.component.html","./src/app/segmentations/segmentations.component.ts","./src/app/segmentations/segmentations.component.html","./src/app/services/statistics-tool.service.ts","./src/app/template-segmentations/template-segmentations.component.ts","./src/app/template-segmentations/template-segmentations.component.html","./src/app/template-segments-header/template-segments-header.component.ts","./src/app/template-segments-header/template-segments-header.component.html","./src/app/utils.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'update_list',component:AppComponent },\r\n    {path: 'index.html',component:AppComponent  } \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ApplicationRef, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { StatisticsToolService } from './services/statistics-tool.service';\r\nimport { MatDrawer, MatSidenav } from '@angular/material/sidenav';\r\nimport { toJSDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer,\r\n              private httpClient:HttpClient) { }\r\n  transform(url:string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  @ViewChild(MatSidenav) public drawer: any;\r\n  showFiller = false;\r\n\r\n  @Input() config_key = '';\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    console.log('keydown',event.key)\r\n    if (event.key === \"Escape\") {\r\n        this.statToolSvc.showDrawer = false;\r\n    }\r\n  }\r\n\r\n    @HostListener(\"window:message\",[\"$event\"])\r\n    SampleFunction($event:MessageEvent) {\r\n      \r\n      this.statToolSvc.openDrawer.next($event.data);\r\n      let o = $event.data as {'action':string, 'value':string};\r\n      \r\n      console.log($event.data)\r\n      if (o.action == 'update_list'){\r\n        console.log('in update_list')\r\n        this.statToolSvc.drawerUpdateListUrl = o.value + \"&key=\" + this.statToolSvc.currentConfigKey + \"&sub_key=\" + this.statToolSvc.getSelectedSubKey();\r\n      }\r\n      if (o.action == 'show_image'){\r\n        console.log('in show_image',o.value)\r\n        \r\n        //check if path exists\r\n        if (this.statToolSvc.activeLocalDataStore && this.statToolSvc.localDataStorePath.length > 0){\r\n          let filepath = this.getFilePath(o.value) \r\n          this.httpClient.post<{'exists':boolean}>('/is_file_exists',{\r\n            'file_path':filepath\r\n          }).subscribe(res => {\r\n            console.log('getFilePath','result',res)\r\n            if (res.exists){\r\n              let url = o.value + \"&local_path=\" + this.statToolSvc.localDataStorePath + \"&key=\" + this.statToolSvc.currentConfigKey + \"&sub_key=\" + this.statToolSvc.getSelectedSubKey();\r\n              this.statToolSvc.drawerShowImageUrl = url;\r\n            } else {\r\n              this.statToolSvc.showDrawer = false;\r\n              this.statToolSvc.fileNotFoundError = 'File ' + filepath + \" not found!\"\r\n            }\r\n          })\r\n        } else {\r\n          this.statToolSvc.drawerShowImageUrl = o.value  + \"&key=\" + this.statToolSvc.currentConfigKey  + \"&sub_key=\" + this.statToolSvc.getSelectedSubKey();\r\n        }\r\n      }\r\n    }\r\n\r\n    constructor(private httpClient:HttpClient,\r\n                private router : Router,\r\n                public statToolSvc:StatisticsToolService,\r\n                public eltRef: ElementRef,\r\n                private appRef: ApplicationRef) {\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n      this.router.events.subscribe((event) => {\r\n        if (event instanceof NavigationStart){\r\n          let sub_keys = new URLSearchParams(window.location.search).get('sub_keys')?.toString();\r\n          let key = new URLSearchParams(window.location.search).get('root_key')?.toString();\r\n          if (sub_keys == undefined)\r\n            sub_keys = ''\r\n          if (key == undefined)\r\n            key = ''\r\n          this.statToolSvc.currentConfigKey = key;\r\n          this.statToolSvc.loadSubKeys(sub_keys);\r\n          console.log('loadSubKeys','loaded')\r\n          this.statToolSvc.init();\r\n          console.log('root key:',key);  \r\n          console.log('sub keys:',sub_keys);  \r\n        }\r\n      })\r\n    }\r\n    \r\n    \r\n\r\n    getFilePath(str:string){\r\n      let startIdx = str.indexOf('[');\r\n      let endIdx = str.indexOf('.mp4');\r\n      let path = str.slice(startIdx+2,endIdx);\r\n      path = path += \".mp4\"\r\n      if (this.statToolSvc.activeLocalDataStore && this.statToolSvc.localDataStorePath.length > 0){\r\n        path = this.statToolSvc.localDataStorePath + \"\\\\\" + path;\r\n      }\r\n\r\n      return path;\r\n    }\r\n  }\r\n","<drawer></drawer>\r\n<template-segmentations></template-segmentations>\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent, SafePipe } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SegmentationsComponent } from './segmentations/segmentations.component';\r\nimport { PklViewComponent } from './pkl-view/pkl-view.component';\r\nimport { StatisticsToolService } from './services/statistics-tool.service';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { TemplateSegmentationsComponent } from './template-segmentations/template-segmentations.component';\r\nimport { TemplateSegmentsHeaderComponent } from './template-segments-header/template-segments-header.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { DrawerComponent } from './drawer/drawer.component';\r\nimport { DrawerContentComponent } from './drawer-content/drawer-content.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport '@angular/localize/init';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SafePipe,\r\n    SegmentationsComponent,\r\n    PklViewComponent,\r\n    TemplateSegmentationsComponent,\r\n    TemplateSegmentsHeaderComponent,\r\n    DrawerComponent,\r\n    DrawerContentComponent,\r\n  ],\r\n  imports: [\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    MatSelectModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatProgressSpinnerModule,\r\n    MatSidenavModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    NgbModule,\r\n    NgbAlertModule\r\n  ],\r\n  providers: [StatisticsToolService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'drawer-content',\r\n  templateUrl: './drawer-content.component.html',\r\n  styleUrls: ['./drawer-content.component.css']\r\n})\r\nexport class DrawerContentComponent implements OnInit {\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    if (event.key === \"Escape\") {\r\n        this.closeDrawer();\r\n    }\r\n  }\r\n\r\n  constructor(public statToolService:StatisticsToolService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngOnDestroy(){\r\n  }\r\n\r\n  closeDrawer(){\r\n    this.statToolService.showDrawer = false;\r\n  }\r\n}\r\n","<div style=\"height:40px;width:100%;display: flex;justify-content: space-between;direction: rtl;\">\r\n    <div style=\"margin:5px\">\r\n        <img src=\"assets/cancel-icon.svg\" style=\"height:33px;width: 33px;position:relative;cursor: pointer;\"\r\n                                  title=\"Close Drawer\" (click)=\"closeDrawer()\">\r\n    </div>\r\n</div>\r\n<div style=\"height: 100vh;width: 100%;display: flex;\">\r\n    <div style=\"width:60%;height: 92%;\">\r\n        <iframe\r\n            style=\"display:block; width:100%; height:85%;margin-top: 0px;border:none;\"\r\n            [src]=\"statToolService.getDrawerUpdateListUrl() | safe\">\r\n        </iframe>\r\n    </div>\r\n    <div style=\"width:40%;height: 100vh;min-width: 600px;\">\r\n        <iframe\r\n            style=\"display:block; width:100%; height:100vh;margin-top: 0px;border:none;\"\r\n            [src]=\"statToolService.getDrawerShowImageUrl() | safe\">\r\n        </iframe>\r\n    </div>\r\n</div>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, HostListener, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'drawer',\r\n  templateUrl: './drawer.component.html',\r\n  styleUrls: ['./drawer.component.css'],\r\n  animations: [\r\n        trigger('widthGrow', [\r\n            state('closed', style({\r\n                width: 0,\r\n            })),\r\n            state('open', style({\r\n                width: 400\r\n            })),\r\n            transition('* => *', animate(150))\r\n        ]),\r\n    ]\r\n})\r\nexport class DrawerComponent implements OnInit {\r\n\r\n  state = \"closed\";\r\n  subscribeOpenDrawer = new Subscription;\r\n\r\n  @HostListener('document:keydown', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    console.log('keydown',event.key)\r\n    if (event.key === \"Escape\") {\r\n        this.statToolSvc.showDrawer = false;\r\n    }\r\n  }\r\n\r\n  changeState(): void {\r\n    (this.state == \"closed\") ? this.state = \"open\" : this.state = \"closed\";\r\n    console.log('Drawer state - ' + this.state);\r\n  }\r\n\r\n  constructor(public statToolSvc:StatisticsToolService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeOpenDrawer = this.statToolSvc.openDrawer.subscribe(msg => {\r\n      this.statToolSvc.showDrawer = true;\r\n      this.statToolSvc.drawerShowImageUrl = '';\r\n      this.changeState();\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if (this.subscribeOpenDrawer != null)\r\n      this.subscribeOpenDrawer.unsubscribe();\r\n  }\r\n\r\n  show = false;\r\n\r\n  clickDrawer(){\r\n    this.statToolSvc.showDrawer = false;//!this.statToolSvc.showDrawer;\r\n    this.changeState();\r\n  }\r\n}\r\n","<div [@widthGrow]=\"state\"\r\n    *ngIf=\"statToolSvc.showDrawer\"\r\n    style=\"z-index: 1000;position: absolute; height: 100vh;width: 100%;display: flex;margin-top: 50px;\">\r\n        <!-- margin -->\r\n        <div style=\"width:8%;height: 100vh;background-color: transparent;opacity: 0.5;flex-grow: 1;\"\r\n            (click)=\"clickDrawer()\">\r\n        </div>\r\n        <!-- main -->\r\n        <div style=\"width:92%;height: 100vh;background-color: white;position: fixed;box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;right: 0px;\">\r\n            <drawer-content></drawer-content>\r\n        </div>\r\n        \r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport {  Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\nimport { Utils } from '../utils';\r\n\r\n@Component({\r\n  selector: 'pkl-view',\r\n  templateUrl: './pkl-view.component.html',\r\n  styleUrls: ['./pkl-view.component.css']\r\n})\r\nexport class PklViewComponent implements OnInit  {\r\n\r\n  @ViewChild('iframe') iframe: ElementRef|null = null;\r\n  \r\n  url = '/get_report_table';\r\n  //subscribeGetSegment = new Subscription;\r\n  selectedRows = '';\r\n  @Input() set selectedRowsSet(rows:string[]){\r\n    //filter only the existing rows\r\n    let tmp:string[] = [];\r\n    let keys = Array.from( this.statToolService.optionalSegmentations.keys() );\r\n    rows.forEach(r => {\r\n      let isExist = keys.find(x => x == r)\r\n      if (isExist)\r\n      tmp.push(r)\r\n    })\r\n\r\n    this.selectedRows = tmp.join(',');\r\n  }\r\n  @Input() selectedColumns = '';\r\n  @Input() set selectedColumnsSet(cols:string[]){\r\n        //filter only the existing columns\r\n        let tmp:string[] = [];\r\n        let keys = Array.from( this.statToolService.optionalSegmentations.keys() );\r\n        cols.forEach(c => {\r\n          let isExist = keys.find(x => x == c)\r\n          if (isExist)\r\n          tmp.push(c)\r\n        })\r\n    \r\n        this.selectedColumns = tmp.join(',');\r\n  }\r\n  @Input() name = '';\r\n  @Input() id = 0;\r\n    \r\n  loadCounter = 0;\r\n\r\n  subscribeUniqueChange = new Subscription;\r\n  subscribeReportChanged = new Subscription;\r\n\r\n  height:string = '';\r\n\r\n  constructor(private httpClient:HttpClient,\r\n              public statToolService:StatisticsToolService) {\r\n    \r\n    this.url = '/get_report_table?calc_unique=' + statToolService.calculateUnique + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();\r\n\r\n    \r\n }\r\n\r\n  ngOnInit(): void {\r\n                  \r\n    this.fixSelectedString();\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns\r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();\r\n    this.loadCounter = 1;\r\n\r\n    this.subscribeUniqueChange = this.statToolService.uniqueValueChanged.subscribe(res => {\r\n      this.loadCounter = 1;\r\n      this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                           + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                           + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();\r\n    })\r\n\r\n    this.subscribeReportChanged = this.statToolService.reportSelected.subscribe(res => {\r\n      this.fixSelectedString();\r\n      this.loadCounter = 1;\r\n      let u = '/get_report_table?cols=' + this.selectedColumns \r\n              + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n              + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();\r\n      this.url = u;\r\n    })\r\n\r\n    \r\n  }\r\n\r\n   ngOnDestroy(){\r\n    if (this.subscribeUniqueChange != null)\r\n      this.subscribeUniqueChange.unsubscribe();\r\n    if (this.subscribeReportChanged != null)\r\n      this.subscribeReportChanged.unsubscribe();\r\n  }\r\n\r\n  onColumnAdded(item:{'item_id':string,'item_text':string}){\r\n    if (this.selectedColumns.length == 0 )\r\n      this.selectedColumns = item.item_id;\r\n    else\r\n      this.selectedColumns += \",\" + item.item_id;\r\n    \r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n\r\n  onAllColumnsAdded(items:{'item_id':string,'item_text':string}[]){\r\n    this.selectedColumns = '';\r\n    items.forEach(x => {\r\n      this.selectedColumns += x.item_id + \",\"\r\n    })\r\n\r\n    this.fixSelectedString();\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n  \r\n  onColumnRemoved(item:{'item_id':string,'item_text':string}){\r\n    let columns = this.selectedColumns.split(\",\");\r\n    this.selectedColumns = '';\r\n    columns.forEach(c => {\r\n      if (c != item.item_text){\r\n        this.selectedColumns += c + \",\"\r\n      }\r\n    })\r\n\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n\r\n  onAllColumnsRemoved(event:any){\r\n    this.selectedColumns = '';\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n\r\n  onRowAdded(item:{'item_id':string,'item_text':string}){\r\n    if (this.selectedRows.length == 0 )\r\n      this.selectedRows = item.item_id;\r\n    else\r\n      this.selectedRows += \",\" + item.item_id;\r\n    \r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n\r\n  onAllRowsAdded(items:{'item_id':string,'item_text':string}[]){\r\n    this.selectedRows = '';\r\n    items.forEach(x => {\r\n      this.selectedRows += x.item_id + \",\"\r\n    })\r\n\r\n    this.fixSelectedString();\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n  \r\n  onRowRemoved(item:{'item_id':string,'item_text':string}){\r\n    let columns = this.selectedRows.split(\",\");\r\n    this.selectedRows = '';\r\n    columns.forEach(c => {\r\n      if (c != item.item_text){\r\n        this.selectedRows += c + \",\"\r\n      }\r\n    })\r\n\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n\r\n  onAllRowsRemoved(event:any){\r\n    this.selectedRows = '';\r\n    this.fixSelectedString();\r\n\r\n    this.statToolService.updateSegments(this.id,this.name,this.selectedColumns,this.selectedRows);\r\n    this.loadCounter = 1;\r\n    this.url = '/get_report_table?cols=' + this.selectedColumns \r\n                                         + \"&rows=\" + this.selectedRows + \"&calc_unique=\" + this.statToolService.calculateUnique\r\n                                         + \"&key=\" + this.statToolService.currentConfigKey + \"&sub_key=\" + this.statToolService.getSelectedSubKey();;\r\n  }\r\n\r\n  fixSelectedString(){\r\n    if (this.selectedColumns.slice(-1) == \",\")  \r\n      this.selectedColumns = this.selectedColumns.slice(0,-1);\r\n    if (this.selectedRows.slice(-1) == \",\")  \r\n      this.selectedRows = this.selectedRows.slice(0,-1);\r\n\r\n  }\r\n\r\n  async onIframeLoad(){\r\n    this.loadCounter = this.loadCounter - 1;\r\n    \r\n    if (this.iframe != null){\r\n      let loop = true;\r\n      while(loop){\r\n        await Utils.sleep(100);\r\n        let h = this.iframe.nativeElement.contentWindow.document.body.scrollHeight;\r\n        if (h > 100){\r\n          //console.log('frame:::',this.id,h);\r\n          h += 100;\r\n          this.height = h.toString() + 'px';\r\n          this.statToolService.viewHeights.set(this.id,this.height);  \r\n          loop = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onViewNameChanged(event:any){\r\n    this.statToolService.updateSegmentationName(this.name,this.id,event.target.value);\r\n  }\r\n\r\n  removeView(){\r\n    this.statToolService.removeView(this.id);\r\n  }\r\n}\r\n","<div class=\"parent\" style=\"border:1px solid lightgray;padding: 3px;\">\r\n    <div *ngIf=\"loadCounter > 0\">\r\n        <img src=\"assets/spinner-90-ring-with-bg.svg\" style=\"width:40px;height:40x\" />\r\n    </div>\r\n    <div style=\"width:99.6%;padding:3px;border:solid 1px lightgray;\r\n                border-radius: 4x !important;margin-top: 3px;\r\n                color:#182a69;background-color:#fafafa\"\r\n         class=\"pkl-view-header\">\r\n            <div style=\"width:100%\">\r\n                <table style=\"width:100%\">\r\n                    <tr>\r\n                        <td style=\"width:20%\">\r\n                            <input type=\"text\" \r\n                                class=\"view-name\"\r\n                                [ngModel]=\"name\"\r\n                                placeholder=\"View Name\"\r\n                                (change)=\"onViewNameChanged($event)\"\r\n                                style=\"padding-left:5px;height:38px;width:96%;border:1px solid #adadad;border-radius: 3px;\"\r\n                            > \r\n                        </td>\r\n                        <td style=\"width:38%\">\r\n                            <segmentations \r\n                                style=\"width:95%;background-color: white;\"\r\n                                name=\"Select Rows\" \r\n                                [selectItems]=\"selectedRows\"\r\n                                (segmentAdded)=\"onRowAdded($event)\"\r\n                                (segmentRemoved)=\"onRowRemoved($event)\"\r\n                                (allSegmentsAdded)=\"onAllRowsAdded($event)\"\r\n                                (allSegmentsRemoved)=\"onAllRowsRemoved($event)\">\r\n                            </segmentations>\r\n                        </td>\r\n                        <td style=\"width:38%\">\r\n                            <segmentations \r\n                                style=\"width:95%;background-color: white;margin-top: 2px;\"\r\n                                name=\"Selct Columns\" \r\n                                [selectItems]=\"selectedColumns\"\r\n                                (segmentAdded)=\"onColumnAdded($event)\"\r\n                                (segmentRemoved)=\"onColumnRemoved($event)\"\r\n                                (allSegmentsAdded)=\"onAllColumnsAdded($event)\"\r\n                                (allSegmentsRemoved)=\"onAllColumnsRemoved($event)\">\r\n                                >\r\n                            </segmentations>\r\n                        </td>\r\n                        <td style=\"text-align: right;\"> \r\n                            <img src=\"assets/cancel-icon.svg\" style=\"height:33px;width: 33px;position:relative;cursor: pointer;\"\r\n                                  title=\"Remove View\" (click)=\"removeView()\">\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    <iframe (load)=\"onIframeLoad()\" \r\n            #iframe\r\n            style=\"display:block; width:100%; margin-top: 3px;border:none\"\r\n            [src]=\"url | safe\"\r\n            [ngStyle]=\"{'height': height}\">\r\n    </iframe>\r\n    <div *ngIf=\"statToolService.showFileNotFoundError()\" \r\n        style=\"position: sticky;bottom: 200px;z-index: 99999999;\">\r\n        <ngb-alert type=\"danger\" (closed)=\"statToolService.fileNotFoundError = ''\">{{ statToolService.fileNotFoundError }}</ngb-alert>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl,ReactiveFormsModule } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'segmentations',\r\n  templateUrl: './segmentations.component.html',\r\n  styleUrls: ['./segmentations.component.css']\r\n})\r\nexport class SegmentationsComponent implements OnInit{\r\n\r\n  @Input() set selectItems(items:string){\r\n    if (items == \",\" || items == \"\" || items == ' ')\r\n      return;\r\n    let arr = items.split(',')\r\n    this.selected = []\r\n    arr.forEach(a => {\r\n      this.selected.push({'item_id':a,'item_text':a})\r\n    })\r\n    console.log('foo','items:',JSON.stringify(arr),'selected:',JSON.stringify(this.selected));\r\n  }\r\n  \r\n  @Input() name = '';\r\n  dropdownList : {'item_id':string,'item_text':string}[] = [];\r\n  selected     : {'item_id':string,'item_text':string}[] = [];\r\n  \r\n  dropdownSettings = {};\r\n  subscribeSegmentationsFetched = new Subscription;\r\n  \r\n  @Output() segmentAdded        = new EventEmitter();\r\n  @Output() segmentRemoved      = new EventEmitter();\r\n  @Output() allSegmentsAdded    = new EventEmitter();\r\n  @Output() allSegmentsRemoved  = new EventEmitter();\r\n\r\n  constructor(private statToolService:StatisticsToolService,\r\n              private httpClient:HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      \r\n      for (let [key, value] of this.statToolService.optionalSegmentations) {\r\n        this.dropdownList.push({'item_id':key,'item_text':key})\r\n      }\r\n\r\n      this.dropdownSettings = {\r\n        singleSelection: false,\r\n        idField: 'item_id',\r\n        textField: 'item_text',\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        itemsShowLimit: 100,\r\n        allowSearchFilter: true,\r\n      };\r\n  }\r\n\r\n  onItemSelect(item: any) {\r\n    console.log('onItemSelect',item);\r\n    this.segmentAdded.emit(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log('onSelectAll',items);\r\n    this.allSegmentsAdded.emit(items);\r\n  }\r\n  onUnSelect(item: any) {\r\n    console.log('onUnSelect',item);\r\n    this.segmentRemoved.emit(item)\r\n  }\r\n\r\n  onUnSelectAll(item: any) {\r\n    console.log('onUnSelectAll',item);\r\n    this.allSegmentsRemoved.emit([])\r\n  }\r\n\r\nngOnDestroy(){\r\n    if (this.subscribeSegmentationsFetched != null)\r\n      this.subscribeSegmentationsFetched.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"dropdownList.length > 0\">\r\n    <ng-multiselect-dropdown\r\n        [placeholder]=\"name\"\r\n        [settings]=\"dropdownSettings\"\r\n        [data]=\"dropdownList\"\r\n        [(ngModel)]=\"selected\"\r\n        (onSelect)=\"onItemSelect($event)\"\r\n        (onSelectAll)=\"onSelectAll($event)\"\r\n        (onDeSelect)=\"onUnSelect($event)\"\r\n        (onDeSelectAll)=\"onUnSelectAll($event)\"\r\n    >\r\n    </ng-multiselect-dropdown>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { connect, Subject } from 'rxjs';\r\n\r\n\r\nexport class SegmentationItem {\r\n  name = '';\r\n  columns:string[] = [];\r\n  rows:string[] = [];\r\n}\r\n\r\nexport class TemplateInfo {\r\n  //wasChanged = false;\r\n  Segmentations:SegmentationItem[] = [];\r\n  SegmentationsClicked:boolean[] = [];\r\n  name = '';\r\n}\r\n\r\ninterface ISegmentation {\r\n  columns:string;\r\n  name:string;\r\n  rows:string;\r\n}\r\ninterface IContent {\r\n  segmentations:ISegmentation[];\r\n}\r\n\r\nexport class SaveTemplate_SegmentItem{\r\n  name = '';\r\n  rows = '';\r\n  columns = '';\r\n}\r\nexport class SaveTemplateRequest {\r\n  name = '';\r\n  segmentations:SaveTemplate_SegmentItem [] = [];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatisticsToolService implements OnInit {\r\n\r\n  optionalSegmentations = new Map<string,string[]>();\r\n  segmentationsFetched = new Subject<number>();\r\n  openDrawer = new Subject<string>();\r\n  uniqueValueChanged = new Subject<boolean>();\r\n  viewHeights = new Map<number,string>();\r\n  reportSelected = new Subject();\r\n    \r\n  templates:TemplateInfo[] = [];\r\n  currentTemplate:TemplateInfo = new TemplateInfo();\r\n  calculateUnique = false;\r\n  fileNotFoundError = '';\r\n\r\n  //templates = [{'key':0,'value':'--- select ---'},{'key':1,'value':'Template 1'},{'key':2,'value':'Template 2'},{'key':3,'value':'Template 3'}]\r\n  templateNameOptions:{'key':number,'value':string}[] = [];\r\n  selectedTamplate = 0;\r\n  selectedSubKey = 0;\r\n\r\n  showDrawer = false;\r\n\r\n  drawerUpdateListUrl = '';\r\n  drawerShowImageUrl = '';\r\n\r\n  activeLocalDataStore = false;\r\n  localDataStorePath = '';\r\n\r\n  currentConfigKey = '';\r\n  subKeys:{'key':number,'value':string}[] = [];\r\n\r\n  constructor(private httpClient:HttpClient) { \r\n    \r\n  }\r\n  \r\n  init(subKeySelected:number = 0){\r\n\r\n    this.templates = [];\r\n    this.currentTemplate = new TemplateInfo();\r\n    this.templateNameOptions = [];\r\n    \r\n    let url = '/get_all_templates' \r\n    this.httpClient.post<{'content':IContent,'name':string}[]>\r\n      (url,{\r\n        'key':this.currentConfigKey,\r\n        'sub_key': this.getSelectedSubKey()\r\n      })\r\n      .subscribe(res => {\r\n        this.processTemplates(res);\r\n\r\n        this.updateTemplateNames();       \r\n\r\n        this.loadSegmentations(subKeySelected);\r\n      })\r\n\r\n      this.readLocalDataStoreInfoFromStorage();\r\n  }\r\n\r\n  loadSegmentations(subKeySelected:number = 0){\r\n    //get all optional segments\r\n    this.optionalSegmentations = new Map<string,string[]>();\r\n    this.httpClient.post<{'name':string,'values':string[]}[]>\r\n      ('/get_segmentations',\r\n        {\r\n          'key':this.currentConfigKey,\r\n          'sub_key': this.subKeys[this.selectedSubKey].value\r\n        }\r\n      )\r\n      .subscribe(res => {\r\n         res.forEach(x => {\r\n          this.optionalSegmentations.set(x.name,x.values);\r\n         })\r\n         this.segmentationsFetched.next(subKeySelected);\r\n      }\r\n    )\r\n  }\r\n\r\n  processTemplates(items:{'content':IContent,'name':string}[]){\r\n    items.forEach(x => {\r\n      let c:IContent = JSON.parse(JSON.stringify(x.content));\r\n      let t = new TemplateInfo();\r\n      t.name = x.name;\r\n      c.segmentations.forEach(s => {\r\n        let seg = new SegmentationItem();\r\n        seg.columns = s.columns.split(',');\r\n        seg.rows = s.rows.split(',');\r\n        seg.name = s.name;\r\n        t.Segmentations.push(seg);\r\n        t.SegmentationsClicked.push(true)\r\n      })  \r\n      this.templates.push(t) ;\r\n    })\r\n  }\r\n\r\n  updateTemplateNames(){\r\n    this.templateNameOptions = [];\r\n    this.templateNameOptions.push({'key':0,'value':'--- New Template ---'});\r\n    for(let i = 0;i< this.templates.length;i++){\r\n      if (this.templates[i].name != '')\r\n        this.templateNameOptions.push({'key':(i+1),'value':this.templates[i].name});\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n  getSegmentations(){\r\n    /*let keys:string[] = [];\r\n    this.optionalSegmentations.forEach((v,k) => {\r\n      keys.push(k)\r\n    });\r\n\r\n    return keys;*/\r\n    return '';\r\n  }\r\n\r\n  onTemplateSelected(templateName:string){\r\n    this.currentTemplate = this.templates.find(x => x.name == templateName)!;\r\n  }\r\n\r\n  getTemplateSegments(templateName:string,index:number,isRows:boolean){\r\n    /*let seg = this.mapTemplateSegments.get(templateName)!\r\n    if (isRows)\r\n      return seg[index].rows;\r\n    else\r\n      return seg[index].columns;*/\r\n  }\r\n\r\n  updateSegments(id:number,templateName:string,csvColumns:string,csvRows:string){\r\n    let cols = csvColumns.split(\",\");\r\n    let rows = csvRows.split(\",\");\r\n    this.currentTemplate.Segmentations[id].columns = cols;\r\n    this.currentTemplate.Segmentations[id].rows = rows;\r\n    //this.currentTemplate.wasChanged = true;\r\n  }\r\n\r\n  updateSegmentationName(templateName:string,id:number,segName:string){\r\n    this.currentTemplate.Segmentations[id].name = segName;\r\n    //this.currentTemplate.wasChanged = true;\r\n  }\r\n  \r\n  addNewTemplate(){\r\n    let t = this.templates.find(x => x.name == \"\")\r\n    if (t == undefined){\r\n      t = new TemplateInfo();\r\n    }\r\n    t.name = \"\";\r\n    let s = new SegmentationItem();\r\n    s.name = 'Total';\r\n    s.columns = [];\r\n    s.rows = [];\r\n    t.Segmentations.push(s);\r\n    t.SegmentationsClicked.push(true);\r\n    this.templates.push(t);\r\n    this.currentTemplate = t;\r\n    console.log('addNewTemplate',JSON.stringify(this.templates),'current:',JSON.stringify(this.currentTemplate));\r\n  }\r\n\r\n  addSegmentations(){\r\n    //this.currentTemplate.wasChanged = true;\r\n    this.currentTemplate.Segmentations.push(new SegmentationItem());\r\n    this.currentTemplate.SegmentationsClicked.push(true);\r\n  }\r\n\r\n  saveTemplate(isNewTemplate:boolean,newTemplateName:string = ''){\r\n    let template_name = this.currentTemplate.name;\r\n    if (isNewTemplate)\r\n      template_name = newTemplateName;\r\n\r\n    let req = new SaveTemplateRequest();\r\n    req.name = template_name;\r\n    this.currentTemplate.Segmentations.forEach(s => {\r\n      let seg = new SaveTemplate_SegmentItem();\r\n      seg.columns = s.columns.join(\",\");\r\n      seg.rows = s.rows.join(\",\");\r\n      seg.name = s.name;\r\n      req.segmentations.push(seg);\r\n    })\r\n    \r\n    this.httpClient.post<any>('/save_template',{\r\n      'name':template_name,\r\n      'content':JSON.stringify(req),\r\n      'key': this.currentConfigKey,\r\n      'sub_key': this.getSelectedSubKey()\r\n    }).subscribe(res => {\r\n\r\n      this.templates = [];\r\n      this.processTemplates(res);\r\n      this.updateTemplateNames();       \r\n      this.onTemplateSelected(template_name);\r\n    })\r\n  }\r\n\r\n  removeView(viewId:number) {\r\n    let segments:SegmentationItem[] = [];\r\n    for(let i = 0; i< this.currentTemplate.Segmentations.length;i++){\r\n      let item = this.currentTemplate.Segmentations[i];\r\n      if (i != viewId){\r\n        segments.push(item);\r\n      } \r\n    }\r\n\r\n    this.currentTemplate.Segmentations = segments;\r\n  }\r\n\r\n  getDrawerUpdateListUrl(){\r\n    return this.drawerUpdateListUrl;\r\n  }\r\n\r\n  getDrawerShowImageUrl(){\r\n    return this.drawerShowImageUrl;\r\n  }\r\n\r\n  readLocalDataStoreInfoFromStorage(){\r\n    this.localDataStorePath = localStorage.getItem('LOCAL_DATA_STORE')!;\r\n    this.activeLocalDataStore = localStorage.getItem('ACTIVATE_LOCAL_DATA_STORE')! == \"true\" ? true : false;\r\n  }\r\n\r\n  saveLocalDataStoreInfoInStorage(){\r\n    localStorage.setItem('LOCAL_DATA_STORE',this.localDataStorePath);\r\n    localStorage.setItem('ACTIVATE_LOCAL_DATA_STORE',this.activeLocalDataStore ? 'true' : 'false');\r\n  }\r\n\r\n  showFileNotFoundError(){\r\n    return this.fileNotFoundError.length > 0;\r\n  }\r\n\r\n  loadSubKeys(str:string){\r\n    this.subKeys = [];\r\n    let items = str.split(\",\");\r\n    let index = 0;\r\n    items.forEach(s => {\r\n      if (s != ''){\r\n        this.subKeys.push({'key':index,'value':s});\r\n        index++;\r\n      }\r\n    })\r\n  }\r\n\r\n  getSelectedSubKey(){\r\n    return this.subKeys[this.selectedSubKey].value;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ApplicationRef, Component, ElementRef, OnInit } from '@angular/core';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\nimport {Location} from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { AppComponent } from '../app.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'template-segmentations',\r\n  templateUrl: './template-segmentations.component.html',\r\n  styleUrls: ['./template-segmentations.component.css']\r\n})\r\nexport class TemplateSegmentationsComponent implements OnInit {\r\n  \r\n  isNewTemplateMode = true;\r\n  templateNameCreated = '';\r\n  backImgSrc = 'assets/back-icon-blue.svg';\r\n  saveImgSrc = 'assets/save-icon-blue.svg';\r\n  addGridImgSrc = 'assets/grid-add-blue.svg';\r\n\r\n  subscribeSegmentsReady = new Subscription;\r\n\r\n  \r\n  constructor(private httpClient:HttpClient,\r\n              public statService:StatisticsToolService,\r\n              private location:Location,\r\n              private router:Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /*let sub = this.statService.segmentationsFetched.subscribe(res => {\r\n      \r\n      sub.unsubscribe();\r\n    })*/\r\n\r\n    this.subscribeSegmentsReady = this.statService.segmentationsFetched.subscribe(selectedSubKey => {\r\n      this.statService.addNewTemplate();\r\n      this.statService.selectedSubKey = selectedSubKey;\r\n      this.statService.reportSelected.next(true);\r\n    })\r\n  } \r\n\r\n  ngOnDestroy(){\r\n    if (this.subscribeSegmentsReady != null)\r\n      this.subscribeSegmentsReady.unsubscribe();\r\n  }\r\n\r\n  getViewHeight(index:number){\r\n    \r\n    var isViewPanelOpen = this.statService.currentTemplate.SegmentationsClicked[index];\r\n\r\n    if (isViewPanelOpen)\r\n      return this.statService.viewHeights.get(index);\r\n    else\r\n      return '0px';  \r\n  }\r\n\r\n  onTemplateSelected(event:any){\r\n    let tempalteId = event.target.value;\r\n    if (tempalteId == 0){ //new temmplate\r\n      this.isNewTemplateMode = true;\r\n      //this.statService.templates = [];\r\n      if (this.statService.templates.length == 0)\r\n        this.statService.addNewTemplate();\r\n      return;\r\n    }\r\n    this.isNewTemplateMode = false;\r\n    this.templateNameCreated = '';\r\n    let t = this.statService.templateNameOptions.find(x => x.key == +tempalteId);\r\n    if (t != undefined){\r\n      this.statService.onTemplateSelected(t.value);\r\n    }\r\n  }\r\n\r\n  onSubKeySelected(event:any){\r\n    this.statService.init(event.target.value);\r\n  }\r\n\r\n  getTemplateName(){\r\n    if (!this.isNewTemplateMode && this.statService.selectedTamplate > 0){\r\n      return this.statService.templateNameOptions.find(x => x.key == this.statService.selectedTamplate)!.value;\r\n    }\r\n\r\n    if (this.isNewTemplateMode && this.templateNameCreated.length > 0){\r\n      return this.templateNameCreated;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getTemplateNameForTitle(){\r\n    \r\n    let t = this.getTemplateName();\r\n    if (t.length > 0){\r\n      return \" - \" + t.toLocaleUpperCase();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  addView(){\r\n    this.statService.addSegmentations();\r\n  }\r\n\r\n  saveTemplate(){\r\n    if (this.isNewTemplateMode)\r\n      this.statService.saveTemplate(true,this.templateNameCreated);\r\n    else\r\n      this.statService.saveTemplate(false);\r\n  }\r\n\r\n  slideUniqueChange(event:any){\r\n    //console.log('slideUniqueChange',event.checked)\r\n    //this.statService.calculateUnique = event.checked;\r\n    //this.statService.uniqueValueChanged.next(event.checked);\r\n    this.statService.uniqueValueChanged.next(this.statService.calculateUnique);\r\n  }\r\n\r\n  slideLocalDataStore(event:any){\r\n    this.statService.saveLocalDataStoreInfoInStorage();      \r\n  }\r\n\r\n  clickPanel(i:number){\r\n    for(let x=0;x < this.statService.currentTemplate.SegmentationsClicked.length;x++){\r\n      if (x == i){\r\n        this.statService.currentTemplate.SegmentationsClicked[x] = !this.statService.currentTemplate.SegmentationsClicked[x];\r\n        /*console.log('view-clicked',\r\n                    i,\r\n                    this.statService.currentTemplate.SegmentationsClicked[x],\r\n                    this.statService.viewHeights.get(x)\r\n        );*/\r\n\r\n      }\r\n      //else\r\n        //this.statService.currentTemplate.SegmentationsClicked[x] = false;\r\n        //console.log('clicked - false',i,this.statService.currentTemplate.SegmentationsClicked[x]);\r\n      }\r\n    }\r\n\r\n    getActiveCls(i:number) {\r\n      if (this.statService.currentTemplate.SegmentationsClicked[i] == true){\r\n        return 'active';\r\n      }\r\n      else\r\n        return ''; \r\n    }\r\n\r\n    agentHas(keyword:string) {\r\n      return navigator.userAgent.toLowerCase().search(keyword.toLowerCase()) > -1;\r\n    }\r\n\r\n    isFireFox(){\r\n      return this.agentHas(\"Firefox\") || this.agentHas(\"FxiOS\") || this.agentHas(\"Focus\");\r\n    }\r\n\r\n    getHeight_deprecated(i:number):number{\r\n      if (this.statService.currentTemplate.SegmentationsClicked[i] == true){\r\n        let segments = this.statService.currentTemplate.Segmentations[i];\r\n        \r\n        let numRows = 1;\r\n        segments.rows.forEach(r => {\r\n          if (r != '') {\r\n            let values = this.statService.optionalSegmentations.get(r);\r\n            numRows = numRows*values!.length;\r\n          }\r\n        })\r\n        let lineHeight = 22;\r\n        let tableHeight = numRows * 8 * lineHeight;\r\n        //if (this.statService.calculateUnique == false)\r\n        //  tableHeight = numRows * 7 * 22; \r\n\r\n        let totalHeight = 0;\r\n        const segmentRowHeight = 40;\r\n        const segmentsFilterRowHeight = 70;\r\n        const viewTitleHeight = 40;\r\n        if (segments.columns.length == 0)\r\n          totalHeight = tableHeight + segmentRowHeight + segmentsFilterRowHeight + viewTitleHeight;\r\n        else\r\n          totalHeight = tableHeight + (segments.columns.length * segmentRowHeight) + segmentsFilterRowHeight + viewTitleHeight;\r\n\r\n        const bufferHeight = 20;  \r\n        let height = (totalHeight + bufferHeight);\r\n        \r\n        return height;\r\n      }\r\n      else\r\n        return 0;\r\n    }\r\n\r\n    getTitle(i:number){\r\n      return this.statService.currentTemplate.Segmentations[i].name;\r\n    }\r\n\r\n    back(){\r\n      let path = this.location.path();\r\n      console.log('path',path)\r\n      if (path.indexOf('/static/') > 0){\r\n        path = path.replace('/static/','/');\r\n        console.log('path-remove-static',path)\r\n      }\r\n      window.location.href = 'http://127.0.0.1:5000/';\r\n    }\r\n\r\n    getDisabledClass(){\r\n      if (this.isNewTemplateMode){\r\n        if (this.templateNameCreated.length == 0)\r\n          return 'disabledImg';\r\n      }\r\n\r\n      return '';\r\n    }\r\n\r\n    localDataStoreChange(event:any){\r\n      this.statService.saveLocalDataStoreInfoInStorage();\r\n    }\r\n\r\n    getLocalDataStoreCls(){\r\n      if (this.statService.activeLocalDataStore){\r\n        return '';\r\n      } else {\r\n        return 'disableLocalDataStore';\r\n      }\r\n    }\r\n }\r\n","<div>\r\n    <!-- HEADER (TODO: REMOVE IT TO A SEPARATE COMPONENT) -->\r\n    \r\n    <div style=\"width:100%;\r\n                height:50px;\r\n                border:1px solid lightgray;\r\n                border-radius: 4px;\r\n                color:#182a69;\r\n                background-color: #E4F0F5;\r\n                position: sticky;\r\n                z-index: 99999;\r\n                top:0px\">\r\n\r\n        <div class=\"template-selection\" style=\"margin-left: 10px;padding-top: 8px;\">\r\n            <div style=\"display: flex;width:100%;height: 40px;\">\r\n                <div class=\"back-icon\" style=\"margin-top:-2px;width:40px\">\r\n                    <img [src]=\"backImgSrc\"\r\n                        (mouseover)=\"backImgSrc = 'assets/back-icon-orange.svg'\"\r\n                        (mouseout)=\"backImgSrc = 'assets/back-icon-blue.svg'\"\r\n                        style=\"width: 33px;height:33px;margin-top: 3px;cursor: pointer;\" \r\n                        title=\"Back\"\r\n                        class=\"back\"\r\n                        (click)=\"back()\">\r\n                </div>\r\n                <ng-container *ngIf=\"!isFireFox()\">\r\n                    <div style=\"width:10%;padding-top:2px;margin-right: 5px;\">\r\n                        <select \r\n                            [(ngModel)]=\"statService.selectedSubKey\"\r\n                            style=\"height: 29px; width:100%;border-color:lightgray;border-radius: 3px;\"\r\n                            (change)=\"onSubKeySelected($event)\"\r\n                            >\r\n                            <option *ngFor=\"let s of statService.subKeys\"\r\n                                            value=\"{{s.key}}\"\r\n                                    >Report - {{s.value}}</option>\r\n                        </select>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"isFireFox()\">\r\n                    <div style=\"width:10%;padding-top:2px;margin-right: 15px;\">\r\n                        <select \r\n                            [(ngModel)]=\"statService.selectedSubKey\"\r\n                            style=\"height: 29px; width:100%;border-color:lightgray;border-radius: 3px;\"\r\n                            (change)=\"onSubKeySelected($event)\"\r\n                            >\r\n                            <option *ngFor=\"let s of statService.subKeys\"\r\n                                            value=\"{{s.key}}\"\r\n                                    >Report - {{s.value}}</option>\r\n                        </select>\r\n                    </div>\r\n                </ng-container>\r\n                \r\n                <div class=\"pipe\"></div>\r\n                <div style=\"width:10%;padding-top:2px;margin-left: 3px;\">\r\n                    <select \r\n                        [(ngModel)]=\"statService.selectedTamplate\"\r\n                        style=\"height: 29px; width:100%;border-color:lightgray;border-radius: 3px;\"\r\n                        (change)=\"onTemplateSelected($event)\"\r\n                        >\r\n                        <option *ngFor=\"let t of statService.templateNameOptions\"\r\n                                        value=\"{{t.key}}\"\r\n                                >{{t.value}}</option>\r\n                    </select>\r\n                </div>\r\n                <ng-container *ngIf=\"isNewTemplateMode\">\r\n                    <div style=\"width:10%;padding-top: 2px;margin-left: 4px;\">\r\n                        <input *ngIf=\"!isFireFox()\"\r\n                            type=\"text\" \r\n                            placeholder=\"Template Name\"\r\n                            [(ngModel)]=\"templateNameCreated\"\r\n                            style=\"height:27px;width:100%;border:1px solid lightgray;border-radius: 3px;padding-left: 3px;\"\r\n                            >\r\n                        <input *ngIf=\"isFireFox()\"\r\n                            type=\"text\" \r\n                            placeholder=\"Template Name\"\r\n                            [(ngModel)]=\"templateNameCreated\"\r\n                            style=\"height:30px;width:100%;border:1px solid lightgray;border-radius: 3px;padding-left: 3px;margin-left: 11px;\"\r\n                        >\r\n\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"!isFireFox()\">\r\n                    <div class=\"save-icon\" style=\"margin-left: 12px;margin-top: -1px;\">\r\n                        <img [src]=\"addGridImgSrc\"\r\n                            (mouseover)=\"addGridImgSrc = 'assets/grid-add-orange.svg'\"\r\n                            (mouseout)=\"addGridImgSrc = 'assets/grid-add-blue.svg'\"\r\n                            style=\"width: 40px;height:40px;margin-top: 0px;cursor: pointer;\" \r\n                            title=\"Add View\"\r\n                            (click)=\"addView()\">\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"isFireFox()\">\r\n                    <div class=\"save-icon\" style=\"margin-left: 22px;margin-top: -1px;\">\r\n                        <img [src]=\"addGridImgSrc\"\r\n                            (mouseover)=\"addGridImgSrc = 'assets/grid-add-orange.svg'\"\r\n                            (mouseout)=\"addGridImgSrc = 'assets/grid-add-blue.svg'\"\r\n                            style=\"width: 40px;height:40px;margin-top: 0px;cursor: pointer;\" \r\n                            title=\"Add View\"\r\n                            (click)=\"addView()\">\r\n                    </div>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"!isFireFox()\">\r\n                    <div class=\"save-icon\" [ngClass]=\"getDisabledClass()\" style=\"margin-left: 5px;margin-top: -1px;\">\r\n                        <img [src]=\"saveImgSrc\"\r\n                            (mouseover)=\"saveImgSrc = 'assets/save-icon-orange.svg'\"\r\n                            (mouseout)=\"saveImgSrc = 'assets/save-icon-blue.svg'\"\r\n                            style=\"width: 33px;height:33px;margin-top: 3px;cursor: pointer;\" \r\n                            title=\"Save Template\"\r\n                            (click)=\"saveTemplate()\">\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"isFireFox()\">\r\n                    <div class=\"save-icon\" [ngClass]=\"getDisabledClass()\" style=\"margin-top: -1px;margin-left: 10px;\">\r\n                        <img [src]=\"saveImgSrc\"\r\n                            (mouseover)=\"saveImgSrc = 'assets/save-icon-orange.svg'\"\r\n                            (mouseout)=\"saveImgSrc = 'assets/save-icon-blue.svg'\"\r\n                            style=\"width: 33px;height:33px;margin-top: 3px;cursor: pointer;\" \r\n                            title=\"Save Template\"\r\n                            (click)=\"saveTemplate()\">\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"pipe\" style=\"margin-right:5px;margin-left: 7px;\"></div>\r\n                <div style=\"display:flex;padding-right:3px;\">\r\n                    <div style=\"margin-bottom:-10px;margin-left:3px;padding-top:10px\">\r\n                        <label class=\"switch\">\r\n                            <input type=\"checkbox\" [(ngModel)]=\"statService.calculateUnique\" (change)=\"slideUniqueChange($event)\">\r\n                            <span class=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                    <div style=\"margin-left:5px;padding-top: 5px;\">\r\n                        <p style=\"font-weight: bold;color:#182a69;\">Unique</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"pipe\"></div>\r\n                <div style=\"display:flex;margin-left: 3px;\">\r\n                    <div style=\"margin-bottom:-10px;margin-left:3px;padding-top:10px\">\r\n                        <label class=\"switch\">\r\n                            <input type=\"checkbox\" \r\n                                   [(ngModel)]=\"statService.activeLocalDataStore\" \r\n                                   (change)=\"slideLocalDataStore($event)\">\r\n                            <span class=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                    <div style=\"margin-left:5px;padding-top: 5px;\">\r\n                        <p style=\"font-weight: bold;color:#182a69;\">Local Store</p>\r\n                    </div>\r\n                    <input type=\"text\" \r\n                           [(ngModel)]=\"statService.localDataStorePath\"  \r\n                           (keyup)=\"localDataStoreChange($event)\"\r\n                           [ngClass]=\"getLocalDataStoreCls()\"\r\n                           [readonly]=\"statService.activeLocalDataStore == false\"\r\n                           style=\"height:27px;margin:5px;margin-top:3px !important;width:180px;border:1px solid lightgray;border-radius: 3px;outline: none;\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- SEGMENTATIONS -->\r\n    <div style=\"margin-top:0px\">\r\n        \r\n            <ng-container *ngFor=\"let x of statService.currentTemplate.Segmentations;let i = index\">\r\n                <button \r\n                    class=\"collapsible\" \r\n                    (click)=\"clickPanel(i)\" \r\n                    style=\"font-weight: bold;\"    \r\n                    [ngClass]=\"getActiveCls(i)\">View - {{ getTitle(i) }}\r\n                </button>\r\n                    <div class=\"content\" [ngStyle]=\"{'min-height':getViewHeight(i)}\">\r\n                        <!--<p>\r\n                            <ngb-alert [dismissible]=\"false\">\r\n                                <strong>Warning!</strong> Better check yourself, you're not looking too good.\r\n                            </ngb-alert>\r\n                        </p>-->\r\n                        <pkl-view \r\n                            [selectedRowsSet] = \"x.rows\"\r\n                            [selectedColumnsSet] = \"x.columns\"\r\n                            [name] = \"x.name\"\r\n                            [id] = i\r\n                        >\r\n                        </pkl-view>          \r\n                    </div>  \r\n            </ng-container>\r\n    </div>\r\n\r\n    <!--<div style=\"position:fixed;bottom:0px;left:0;height: 50px;z-index: 99999;background: #fafafa;width:100%\">\r\n        <button style=\"left:5px;top:10px;background-color: lightgray;font-weight: bold;color: #182a69 !important;\" \r\n                mat-raised-button \r\n                (click)=\"addView()\">Add View</button>\r\n    </div>-->\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StatisticsToolService } from '../services/statistics-tool.service';\r\n\r\n@Component({\r\n  selector: 'template-segments-header',\r\n  templateUrl: './template-segments-header.component.html',\r\n  styleUrls: ['./template-segments-header.component.css']\r\n})\r\nexport class TemplateSegmentsHeaderComponent implements OnInit {\r\n\r\n  constructor(public statToolService: StatisticsToolService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngDestroy(){\r\n    \r\n  }\r\n\r\n}\r\n","<div style=\"width:100%;\r\n            height:195px;\r\n            border:1px solid lightgray;\r\n            border-radius: 4px;\r\n            color:#182a69;\r\n            background-color: #fafafa;\">\r\n    \r\n    <div class=\"template-selection\" style=\"width:600px\">\r\n        <mat-grid-list cols=\"2\" rowHeight=\"40px\">\r\n\r\n        </mat-grid-list>\r\n    \r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class Utils  {\r\n\r\n    public static sleep(ms:number) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","AppComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","NavigationStart","MatSidenav","SafePipe","constructor","sanitizer","httpClient","transform","url","bypassSecurityTrustResourceUrl","pure","onKeydownHandler","event","console","log","key","statToolSvc","showDrawer","SampleFunction","$event","openDrawer","next","data","o","action","drawerUpdateListUrl","value","currentConfigKey","getSelectedSubKey","activeLocalDataStore","localDataStorePath","length","filepath","getFilePath","post","subscribe","res","exists","drawerShowImageUrl","fileNotFoundError","router","eltRef","appRef","ngOnInit","events","sub_keys","URLSearchParams","window","location","search","get","toString","undefined","loadSubKeys","init","str","startIdx","indexOf","endIdx","slice","selectors","viewQuery","ctx","i0","FormsModule","ReactiveFormsModule","MatSelectModule","MatGridListModule","MatRadioModule","MatButtonModule","MatProgressSpinnerModule","BrowserModule","HttpClientModule","SegmentationsComponent","PklViewComponent","StatisticsToolService","NgMultiSelectDropDownModule","TemplateSegmentationsComponent","TemplateSegmentsHeaderComponent","MatSlideToggleModule","MatIconModule","MatSidenavModule","MatToolbarModule","DrawerComponent","DrawerContentComponent","MatExpansionModule","NgbModule","NgbAlertModule","AppModule","bootstrap","declarations","closeDrawer","statToolService","ngOnDestroy","hostBindings","animate","state","style","transition","trigger","Subscription","changeState","subscribeOpenDrawer","msg","unsubscribe","clickDrawer","width","Utils","selectedRowsSet","rows","tmp","keys","Array","from","optionalSegmentations","forEach","r","isExist","find","x","push","selectedRows","join","selectedColumnsSet","cols","c","selectedColumns","calculateUnique","fixSelectedString","loadCounter","subscribeUniqueChange","uniqueValueChanged","subscribeReportChanged","reportSelected","u","onColumnAdded","item","item_id","updateSegments","id","name","onAllColumnsAdded","items","onColumnRemoved","columns","split","item_text","onAllColumnsRemoved","onRowAdded","onAllRowsAdded","onRowRemoved","onAllRowsRemoved","onIframeLoad","iframe","loop","sleep","h","nativeElement","contentWindow","document","body","scrollHeight","height","viewHeights","set","onViewNameChanged","updateSegmentationName","target","removeView","EventEmitter","selectItems","arr","selected","a","JSON","stringify","dropdownList","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","onItemSelect","segmentAdded","emit","onSelectAll","allSegmentsAdded","onUnSelect","segmentRemoved","onUnSelectAll","allSegmentsRemoved","subscribeSegmentationsFetched","inputs","outputs","decls","vars","consts","template","Subject","SegmentationItem","TemplateInfo","SaveTemplate_SegmentItem","SaveTemplateRequest","Map","subKeySelected","templates","currentTemplate","templateNameOptions","processTemplates","updateTemplateNames","loadSegmentations","readLocalDataStoreInfoFromStorage","subKeys","selectedSubKey","values","segmentationsFetched","parse","content","t","segmentations","s","seg","Segmentations","SegmentationsClicked","i","getSegmentations","onTemplateSelected","templateName","getTemplateSegments","index","isRows","csvColumns","csvRows","segName","addNewTemplate","addSegmentations","saveTemplate","isNewTemplate","newTemplateName","template_name","req","viewId","segments","getDrawerUpdateListUrl","getDrawerShowImageUrl","localStorage","getItem","saveLocalDataStoreInfoInStorage","setItem","showFileNotFoundError","factory","providedIn","statService","subscribeSegmentsReady","getViewHeight","isViewPanelOpen","tempalteId","isNewTemplateMode","templateNameCreated","onSubKeySelected","getTemplateName","selectedTamplate","getTemplateNameForTitle","toLocaleUpperCase","addView","slideUniqueChange","slideLocalDataStore","clickPanel","getActiveCls","agentHas","keyword","navigator","userAgent","toLowerCase","isFireFox","getHeight_deprecated","numRows","lineHeight","tableHeight","totalHeight","segmentRowHeight","segmentsFilterRowHeight","viewTitleHeight","bufferHeight","getTitle","back","replace","href","getDisabledClass","localDataStoreChange","getLocalDataStoreCls","ngDestroy","ms","Promise","resolve","setTimeout","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}